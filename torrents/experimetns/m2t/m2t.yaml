---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: magnet2torrent
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: magnet2torrent
  template:
    metadata:
      labels:
        app: magnet2torrent
    spec:
      securityContext:
        fsGroup: 1001
      volumes:
      - name: torrents
        persistentVolumeClaim:
          claimName: torrents
      containers:
      - name: magnet2torrent
        image: docker.io/antaresinc/magnet2torrent:sha-72c61ab04e716e8d1e59f40c8be4e5840cf27374
        command:
        - python
        - main.py
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        volumeMounts:
        - name: torrents
          mountPath: "/torrent"
        resources:
          requests:
            cpu: 10m
            memory: 35Mi
          limits:
            cpu: "500m"
            memory: 50Mi
        env:
        - name: log_level
          value: trace
        - name: webserver_basepath
          value: /magnet2torrent
        - name: web_userpassword
          value: password
        - name: web_username
          value: user
        - name: transmission_host 
          value: ''
        # securityContext:
        #   allowPrivilegeEscalation: false
        # startupProbe:
        #   tcpSocket:
        #     port: 8080
        #   initialDelaySeconds: 15
        #   periodSeconds: 20
        # readinessProbe:
        #   tcpSocket:
        #     port: 8080
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        # livenessProbe:
        #   tcpSocket:
        #     port: 8080
        #   initialDelaySeconds: 15
        #   periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: m2t
spec:
  selector:
    app: magnet2torrent
  ports:
  - name: http
    port: 80
    targetPort: web
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: torrents-i
spec:
  storageClassName: iscsi
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
