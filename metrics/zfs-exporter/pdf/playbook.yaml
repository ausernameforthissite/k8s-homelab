---
- name: Install and enable monitoring systemd timer
  hosts: zfs
  become: true

  vars:
    desired_version: 2.3.8

    local_binary_path: "./env/zfs_exporter-{{ desired_version }}.linux-amd64/zfs_exporter"
    install_path: /opt/pdf_zfs_exporter

    app_version_pattern: '(?m)^zfs_exporter,\s+version\s+([0-9]+\.[0-9]+\.[0-9]+)?\s\(branch'

  tasks:
  - name: Ensure /opt exists
    file:
      path: /opt
      state: directory
      mode: "0755"
      owner: root
      group: root

  - name: Default installed_version to empty string
    set_fact:
      installed_version: ""

  - name: Check whether my_app already installed on remote
    stat:
      path: "{{ install_path }}"
    register: bin_stat

  - name: If installed, check --version
    command: "{{ install_path }} --version"
    register: installed_version_raw
    changed_when: false
    failed_when: false
    when: bin_stat.stat.exists

  - name: Extract application version matches (strict pattern) into a list
    set_fact:
      installed_version_list: >-
        {{
          (installed_version_raw.stderr | default(''))
          | regex_findall(app_version_pattern)
        }}
    when: bin_stat.stat.exists

  - name: Set installed_version from match (if any)
    set_fact:
      installed_version: "{{ installed_version_list[0] }}"
    when:
    - bin_stat.stat.exists
    - installed_version_list | length > 0

  - name: Set installed_version from match (if any)
    set_fact:
      installed_version: ""
    when:
    - bin_stat.stat.exists
    - installed_version_list | length == 0

  - name: Show desired vs installed (debug)
    debug:
      msg:
      - "desired_version='{{ desired_version }}'"
      - "installed_version='{{ installed_version | default('') }}'"

  - name: Copy exporter binary
    copy:
      src: "{{ local_binary_path }}"
      dest: "{{ install_path }}"
      owner: root
      group: root
      mode: "0755"
    when: installed_version != desired_version

  - name: Deploy service unit
    template:
      src: ./pdf_zfs_exporter.service
      dest: /etc/systemd/system/pdf_zfs_exporter.service
      owner: root
      group: root
      mode: "0644"
    notify: systemd-daemon-reload

  - name: Create service group
    group:
      name: pdf_zfs_exporter
      state: present
      system: true

  - name: Create service user
    user:
      name: pdf_zfs_exporter
      group: pdf_zfs_exporter
      shell: /usr/sbin/nologin
      create_home: false
      system: true
      state: present

  - name: Start service
    systemd:
      name: pdf_zfs_exporter.service
      enabled: yes
      state: started
      daemon_reload: no
  handlers:
  - name: systemd-daemon-reload
    systemd:
      daemon_reload: yes
    listen: systemd-daemon-reload
