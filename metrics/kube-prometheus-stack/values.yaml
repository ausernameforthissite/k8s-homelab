---

nameOverride: kps
fullnameOverride: kps
namespaceOverride: kps

cleanPrometheusOperatorObjectNames: true

crds:
  enabled: false

defaultRules:
  create: false
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubeControllerManager: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeSchedulerAlerting: true
    kubeSchedulerRecording: true
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true
    windows: true

alertmanager:
  enabled: false
  ingress:
    enabled: false
  serviceMonitor:
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      separator: ;
      regex: ^(.*)$
      targetLabel: nodename
      replacement: $1
      action: replace
    metricRelabelings:
    - action: keep
      # relabelings here affect both alertmanager and config-reloader containers
      regex: "\
        alertmanager_alerts.*|\
        alertmanager_build_info|\
        alertmanager_config_hash|\
        alertmanager_config_last_reload_successful|\
        alertmanager_notifications_.*|\
        reloader_config_apply_operations_failed_total|\
        reloader_config_apply_operations_total|\
        reloader_last_reload_success_timestamp_seconds|\
        reloader_last_reload_successful|\
        reloader_reloads_failed_total|\
        reloader_reloads_total|\
        reloader_watch_errors_total|\
        reloader_watch_events_total|\
        "
      sourceLabels:
      - __name__

grafana:
  enabled: false
  namespaceOverride: kps-grafana
  defaultDashboardsEnabled: false
  forceDeployDashboards: false
  defaultDashboardsTimezone: browser
  forceDeployDatasources: false
  adminPassword: AUTOREPLACE_ADMIN_PASSWORD
  serviceMonitor:
    scrapeTimeout: ''
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      separator: ;
      regex: ^(.*)$
      targetLabel: nodename
      replacement: $1
      action: replace
    metricRelabelings:
    - action: keep
      regex: "\
        grafana_alerting_alerts|\
        grafana_alerting_alerts_invalid_total|\
        grafana_alerting_alerts_received_total|\
        grafana_http_request_duration_.*|\
        grafana_build_info|\
        grafana_datasource_.*|\
        grafana_stat_.*|\
        "
      sourceLabels:
      - __name__

kubeApiServer:
  enabled: false
  tlsConfig:
    serverName: kubernetes
    insecureSkipVerify: false
  serviceMonitor:
    relabelings:
    - sourceLabels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
      action: keep
      regex: default;kubernetes;https
    - targetLabel: __address__
      replacement: kubernetes.default.svc:443
    metricRelabelings:
    - action: keep
      sourceLabels:
        - __name__
      regex: "\
        apiserver_client_certificate_expiration_.*|\
        apiserver_request_terminations_total|\
        apiserver_request_total|\
        apiserver_storage_objects|\
        apiserver_storage_size_bytes|\
        apiserver_tls_handshake_errors_total|\
        kubernetes_build_info|\
        rest_client_requests_total\
        "

kubelet:
  enabled: false
  serviceMonitor:
    metricRelabelings:
    - action: keep
      regex: "\
        kubelet_node_name|\
        kubernetes_build_info|\
        kubelet_active_pods|\
        kubelet_desired_pods|\
        kubelet_running_pods|\
        kubelet_working_pods|\
        kubelet_container_log_filesystem_used_bytes|\
        kubelet_pod_worker_.*|\
        kubelet_volume_stats.*|\
        "
      sourceLabels:
      - __name__
    cAdvisorMetricRelabelings:
    # drop metrics for dummy cgroup containers without name
    - sourceLabels: 
      - __name__
      - container
      action: drop
      # select only metrics that are linked to containers
      # for example, network metrics do not have container label by design
      regex: 'container_(cpu_|fs_|blkio_|memory_|oom_|start_time_|threads|processes|sockets|ulimits_soft).*;'
      separator: ;
    # iops metrics don't seems to be useful
    # - sourceLabels: [__name__]
    #   action: drop
    #   regex: 'container_fs_reads_total|container_fs_writes_total'
    # Drop less useful container CPU metrics.
    - sourceLabels: [__name__]
      action: drop
      regex: 'container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)'
    # Drop less useful container / always zero filesystem metrics.
    - sourceLabels: [__name__]
      action: drop
      regex: 'container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)'
    # Drop less useful / always zero container memory metrics.
    - sourceLabels: [__name__]
      action: drop
      regex: 'container_memory_(mapped_file|swap)'
    # Drop less useful container process metrics.
    - sourceLabels: [__name__]
      action: drop
      regex: 'container_(file_descriptors|tasks_state|threads_max)'
    # Drop container spec metrics that overlap with kube-state-metrics.
    - sourceLabels: [__name__]
      action: drop
      regex: 'container_spec.*'
    # Drop cgroup metrics with no pod.
    - sourceLabels: [id, pod]
      action: drop
      regex: '.+;'
    - action: drop
      regex: container_last_seen
      sourceLabels:
      - __name__
    # cAdvisorRelabelings:
    # - action: replace
    #   sourceLabels: [__metrics_path__]
    #   targetLabel: metrics_path
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace
    # probesRelabelings:
    # - action: replace
    #   sourceLabels: [__metrics_path__]
    #   targetLabel: metrics_path
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace
    # resourceRelabelings:
    # - action: replace
    #   sourceLabels: [__metrics_path__]
    #   targetLabel: metrics_path
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace
    # relabelings:
    # - action: replace
    #   sourceLabels: [__metrics_path__]
    #   targetLabel: metrics_path
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace

kubeControllerManager:
  enabled: false
  serviceMonitor:
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      separator: ;
      regex: ^(.*)$
      targetLabel: nodename
      replacement: $1
      action: replace
    metricRelabelings:
    - action: keep
      sourceLabels:
        - __name__
      regex: kubernetes_build_info

coreDns:
  enabled: false
  serviceMonitor:
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      separator: ;
      regex: ^(.*)$
      targetLabel: nodename
      replacement: $1
      action: replace

kubeDns:
  enabled: false

kubeEtcd:
  enabled: false
  service:
    enabled: true
    port: 2379
    targetPort: 2379
  serviceMonitor:
    scheme: https
    insecureSkipVerify: false
    serverName: localhost
    caFile: /etc/prometheus/secrets/etcd-client-cert/ca.crt
    certFile: /etc/prometheus/secrets/etcd-client-cert/healthcheck-client.crt
    keyFile: /etc/prometheus/secrets/etcd-client-cert/healthcheck-client.key
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      separator: ;
      regex: ^(.*)$
      targetLabel: nodename
      replacement: $1
      action: replace

kubeScheduler:
  enabled: false
  serviceMonitor:
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      separator: ;
      regex: ^(.*)$
      targetLabel: nodename
      replacement: $1
      action: replace
    metricRelabelings:
    - action: keep
      sourceLabels:
        - __name__
      regex: kubernetes_build_info

kubeProxy:
  enabled: false

kubeStateMetrics:
  enabled: false

kube-state-metrics:
  enabled: false
  namespaceOverride: kps-ksm
  fullnameOverride: kube-state-metrics
  selfMonitor:
    enabled: true
  prometheus:
    monitor:
      enabled: true
      relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        separator: ;
        regex: ^(.*)$
        targetLabel: nodename
        replacement: $1
        action: replace
      metricRelabelings:
      - action: keep
        # relabelings here affect both alertmanager and config-reloader containers
        regex: "\
          kube_state_metrics_.*|\
          kube_daemonset_.*|\
          kube_deployment_.*|\
          kube_namespace_.*|\
          kube_node_.*|\
          kube_persistentvolumeclaim_.*|\
          kube_persistentvolume_.*|\
          kube_pod_.*|\
          kube_replicaset_owner|\
          kube_statefulset_.*|\
          "
        sourceLabels:
        - __name__

nodeExporter:
  enabled: false
  forceDeployDashboards: false

prometheus-node-exporter:
  namespaceOverride: kps-node-exporter
  nameOverride: node-exporter
  fullnameOverride: node-exporter
  # podLabels:
  #   jobLabel: node-exporter
  # extraArgs:
  #   - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
  #   - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  # service:
  #   portName: http-metrics
  prometheus:
    monitor:
      enabled: true
      relabelings:
      - sourceLabels: [__meta_kubernetes_endpoint_node_name]
        separator: ;
        regex: ^(.*)$
        targetLabel: instance
        replacement: $1
        action: replace
      metricRelabelings:
      - action: keep
        regex: "\
          node_arp_entries|\
          node_boot_time_seconds|\
          node_cpu_seconds_total|\
          node_disk_.*|\
          node_dmi_info|\
          node_exporter_build_info|\
          node_filefd_allocated|\
          node_filefd_maximum|\
          node_filesystem_.*|\
          node_forks_total|\
          node_intr_total|\
          node_load.*|\
          node_memory_.*|\
          node_network_carrier|\
          node_network_carrier_changes_total|\
          node_network_(receive|transmit)_(bytes|packets|drop|errs)_total|\
          node_network_up|\
          node_nf_conntrack_entries|\
          node_nf_conntrack_entries_limit|\
          node_os_info|\
          node_pressure_.*|\
          node_schedstat_.*|\
          node_selinux_enabled|\
          node_time_seconds|\
          node_time_zone_offset_seconds|\
          node_uname_info|\
          node_vmstat_.*|\
          "
        sourceLabels:
        - __name__

prometheusOperator:
  enabled: false
  fullnameOverride: prometheus-operator
  admissionWebhooks:
    enabled: true
    certManager:
      enabled: false
  serviceMonitor:
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      separator: ;
      regex: ^(.*)$
      targetLabel: nodename
      replacement: $1
      action: replace
    metricRelabelings:
    - action: keep
      # relabelings here affect both alertmanager and config-reloader containers
      regex: "\
        prometheus_operator_list_operations_.*|\
        prometheus_operator_managed_resources|\
        prometheus_operator_node_address_lookup_errors_total|\
        prometheus_operator_reconcile_errors_total|\
        prometheus_operator_reconcile_operations_total|\
        prometheus_operator_status_update_errors_total|\
        prometheus_operator_status_update_operations_total|\
        prometheus_operator_syncs|\
        prometheus_operator_watch_operations_failed_total|\
        prometheus_operator_watch_operations_total|\
        "
      sourceLabels:
      - __name__

prometheus:
  enabled: false
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false
    scrapeInterval: 10s
    evaluationInterval: 10s
    disableCompaction: false
    replicas: 1
    retention: 10y
    enableAdminAPI: true
    secrets: ['etcd-client-cert']
    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: db # https://github.com/prometheus-community/helm-charts/issues/4523
        spec:
          storageClassName: invalid
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: invalid
    volumes:
    - name: tmp
      emptyDir: {}
    volumeMounts:
    - mountPath: /tmp
      name: tmp
  serviceMonitor:
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      separator: ;
      regex: ^(.*)$
      targetLabel: nodename
      replacement: $1
      action: replace
    metricRelabelings:
      - action: keep
        # relabelings here affect both prometheus and config-reloader containers
        regex: "\
          prometheus_build_info|\
          prometheus_config_last_reload_success_timestamp_seconds|\
          prometheus_config_last_reload_successful|\
          prometheus_engine_queries|\
          prometheus_engine_queries_concurrent_max|\
          prometheus_engine_query_duration_seconds.*|\
          prometheus_notifications_.*|\
          prometheus_remote_storage_.*|\
          prometheus_rule_evaluation_.*|\
          prometheus_rule_group_.*|\
          prometheus_sd_refresh_failures_total|\
          prometheus_sd_kubernetes_failures_total|\
          prometheus_target_interval_length_.*|\
          prometheus_target_metadata_cache_entries|\
          prometheus_target_scrape_pool_exceeded_label_limits_total|\
          prometheus_target_scrape_pool_exceeded_target_limit_total|\
          prometheus_target_scrapes_.*|\
          prometheus_target_sync_failed_total|\
          prometheus_target_sync_length_.*|\
          prometheus_tsdb_compaction_duration_seconds_bucket.*|\
          prometheus_tsdb_compactions_failed_total|\
          prometheus_tsdb_compactions_total|\
          prometheus_tsdb_compactions_triggered_total|\
          prometheus_tsdb_head_chunks|\
          prometheus_tsdb_head_samples_appended_total|\
          prometheus_tsdb_head_series|\
          prometheus_tsdb_reloads_failures_total|\
          prometheus_tsdb_reloads_total|\
          reloader_config_apply_operations_failed_total|\
          reloader_config_apply_operations_total|\
          reloader_last_reload_success_timestamp_seconds|\
          reloader_last_reload_successful|\
          reloader_reloads_failed_total|\
          reloader_reloads_total|\
          reloader_watch_errors_total|\
          reloader_watch_events_total|\
          "
        sourceLabels:
        - __name__

thanosRuler:
  enabled: false
