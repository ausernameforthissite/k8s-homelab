---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kps-k8s.rules.container-cpu-usage-seconds-total
  labels:
    release: kps
spec:
  groups:
  - name: k8s-rules.container_cpu_usage_seconds_total.with_pod_info
    rules:
    # Usually it's bad to have a "counter" metric recording rule
    # because rate "must" be the first operation over a counter metric
    # the reason is that if some part of the metric is reset,
    # rate will work as if the whole metric was reset to 0 and then rapidly grew.
    # So, here creating a new counter metric is OK, because partial resets are impossible for this metric
    - expr: |-
        sum by (cluster, namespace, pod, container, name)
        (
          container_cpu_usage_seconds_total{job="kubelet", metrics_path="/metrics/cadvisor", image!="", container!=""}
        ) *
        on (cluster, namespace, pod)
        # there can be several containers on LHS,
        # group_left forces prometheus to duplicate RHS for each container
        # we can't use group_left(container) because it would use container value from kube_pod_info
        group_left(node)
        # there are duplicated RHS records when pod restarts and gets a new ip
        topk by (cluster, namespace, pod) (1,
          max by (cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: container_cpu_usage_seconds_total:with_pod_info
