---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: alert-config-reloaders
  labels:
    prometheus.io/instance: main
    instance.prometheus.io/main: enable
    instance.prometheus.io/prompp: enable
spec:
  groups:
  - name: config-reloaders
    rules:
    - alert: ConfigReloaderSidecarErrors
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}
        summary: config-reloader sidecar has not had a successful reload for 10m
      expr: max_over_time(reloader_last_reload_successful[5m]) == 0
      for: 10m
      labels:
        severity: warning
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: alert-prometheus
  labels:
    prometheus.io/instance: main
    instance.prometheus.io/main: enable
    instance.prometheus.io/prompp: enable
spec:
  groups:
  - name: prometheus
    rules:
    - alert: PrometheusBadConfig
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusbadconfig
        summary: Prometheus has failed to reload its configuration
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        max_over_time(prometheus_config_last_reload_successful[5m]) == 0
      for: 10m
      labels:
        severity: critical
    - alert: PrometheusSDRefreshFailure
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          mechanism {{$labels.mechanism}}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
        summary: Prometheus has failed to refresh service discovery
      expr: increase(prometheus_sd_refresh_failures_total[10m]) > 0
      for: 20m
      labels:
        severity: warning
    - alert: PrometheusKubernetesListWatchFailures
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          {{ printf "%.0f" $value }} failures
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuskuberneteslistwatchfailures
        summary: Requests in Kubernetes SD are failing LIST/WATCH requests
      expr: increase(prometheus_sd_kubernetes_failures_total{}[5m]) > 0
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusNotificationQueueRunningFull
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotificationqueuerunningfull
        summary: Prometheus alert notification queue predicted to run full in less than 30m
      expr: |-
        # Without min_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        (
          predict_linear(prometheus_notifications_queue_length[5m], 60 * 30)
        >
          min_over_time(prometheus_notifications_queue_capacity[5m])
        )
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusErrorSendingAlertsToSomeAlertmanagers
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          Alertmanager {{$labels.alertmanager}}:
          {{ $value | humanizePercentage }} errors
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuserrorsendingalertstosomealertmanagers
        summary: More than 1% of alerts sent by Prometheus to a specific Alertmanager were affected by errors
      expr: |-
        (
          rate(prometheus_notifications_errors_total[5m])
        /
          rate(prometheus_notifications_sent_total[5m])
        ) > 0.01
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusNotConnectedToAlertmanagers
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotconnectedtoalertmanagers
        summary: Prometheus is not connected to any Alertmanagers.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        max_over_time(prometheus_notifications_alertmanagers_discovered[5m]) < 1
      for: 10m
      labels:
        severity: warning
    - alert: PrometheusTSDBReloadsFailing
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          {{ $value | humanize }} failures
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustsdbreloadsfailing
        summary: Prometheus has issues reloading blocks from disk
      expr: increase(prometheus_tsdb_reloads_failures_total[3h]) > 0
      for: 4h
      labels:
        severity: warning
    - alert: PrometheusTSDBCompactionsFailing
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          {{$value | humanize}} failures
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustsdbcompactionsfailing
        summary: Prometheus has issues compacting blocks
      expr: increase(prometheus_tsdb_compactions_failed_total[3h]) > 0
      for: 4h
      labels:
        severity: warning
    - alert: PrometheusNotIngestingSamples
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotingestingsamples
        summary: Prometheus is not ingesting samples.
      expr: |-
        (
          sum without(type) (rate(prometheus_tsdb_head_samples_appended_total[5m])) <= 0
        and
          (
            sum without(scrape_job) (prometheus_target_metadata_cache_entries) > 0
          or
            sum without(rule_group) (prometheus_rule_group_rules) > 0
          )
        )
      for: 10m
      labels:
        severity: warning
    - alert: PrometheusDuplicateTimestamps
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          {{ printf "%.4g" $value }} samples/s
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusduplicatetimestamps
        summary: Prometheus is dropping samples with different values but duplicated timestamp.
      expr: rate(prometheus_target_scrapes_sample_duplicate_timestamp_total[5m]) > 0
      for: 10m
      labels:
        severity: warning
    - alert: PrometheusOutOfOrderTimestamps
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          {{ printf "%.4g" $value  }} samples/s
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusoutofordertimestamps
        summary: Prometheus dropping samples with out-of-order timestamps.
      expr: rate(prometheus_target_scrapes_sample_out_of_order_total[5m]) > 0
      for: 10m
      labels:
        severity: warning
    - alert: PrometheusRemoteStorageFailures
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          remote {{ $labels.remote_name}}:{{ $labels.url }}:
          {{ $value | humanizePercentage }}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotestoragefailures
        summary: Prometheus failed to send more than 1% of samples to remote storage
      expr: |-
        (
          (rate(prometheus_remote_storage_failed_samples_total[5m]) or rate(prometheus_remote_storage_samples_failed_total[5m]))
        /
          (
            (rate(prometheus_remote_storage_failed_samples_total[5m]) or rate(prometheus_remote_storage_samples_failed_total[5m]))
          +
            (rate(prometheus_remote_storage_succeeded_samples_total[5m]) or rate(prometheus_remote_storage_samples_total[5m]))
          )
        ) > 0.01
      for: 15m
      labels:
        severity: critical
    - alert: PrometheusRemoteWriteBehind
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          remote {{ $labels.remote_name}}:{{ $labels.url }}:
          {{ $value | humanizeDuration }} behind
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotewritebehind
        summary: Prometheus remote write is more than 2 minutes behind.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        (
          max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds[5m])
        - ignoring(remote_name, url) group_right
          max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds[5m])
        )
        > 120
      for: 15m
      labels:
        severity: critical
    - alert: PrometheusRemoteWriteDesiredShards
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          remote {{ $labels.remote_name}}:{{ $labels.url }}:
          {{ $value }} > {{ printf `prometheus_remote_storage_shards_max{instance="%s"}` $labels.instance | query | first | value }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotewritedesiredshards
        summary: Prometheus remote write desired shards calculation wants to run more than configured max shards.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        (
          max_over_time(prometheus_remote_storage_shards_desired[5m])
        >
          max_over_time(prometheus_remote_storage_shards_max[5m])
        )
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusRuleFailures
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          rule {{ $labels.rule_name }}:
          {{ printf "%.0f" $value }} failures
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusrulefailures
        summary: Prometheus is failing rule evaluations
      expr: |-
        label_replace(
          increase(prometheus_rule_evaluation_failures_total[5m]),
          "rule_name", "$1/$2",
          "rule_group", "/etc/prometheus/rules/[^/]+/([a-zA-Z\\-]+)-[a-zA-Z0-9\\-]+.yaml;(.*)"
        ) > 0
      for: 15m
      labels:
        severity: critical
    - alert: PrometheusMissingRuleEvaluations
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          rule {{ $labels.rule_name }}:
          {{ printf "%.0f" $value }} missed
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusmissingruleevaluations
        summary: Prometheus is missing rule evaluations due to slow rule group evaluation
      expr: |-
        label_replace(
          increase(prometheus_rule_group_iterations_missed_total[5m]),
          "rule_name", "$1/$2",
          "rule_group", "/etc/prometheus/rules/[^/]+/([a-zA-Z\\-]+)-[a-zA-Z0-9\\-]+.yaml;(.*)"
        ) > 0
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusTargetLimitHit
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          dropped {{ printf "%.0f" $value }} targets
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustargetlimithit
        summary: Prometheus has dropped targets because some scrape configs have exceeded the target_limit.
      expr: increase(prometheus_target_scrape_pool_exceeded_target_limit_total[5m]) > 0
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusLabelLimitHit
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          dropped {{ printf "%.0f" $value }} targets
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuslabellimithit
        summary: Prometheus has dropped targets because some scrape configs have exceeded label_limit, label_name_length_limit or label_value_length_limit
      expr: increase(prometheus_target_scrape_pool_exceeded_label_limits_total[5m]) > 0
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusScrapeBodySizeLimitHit
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          failed {{ printf "%.0f" $value }} scrapes
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusscrapebodysizelimithit
        summary: Prometheus has dropped some targets that exceeded body_size_limit
      expr: increase(prometheus_target_scrapes_exceeded_body_size_limit_total[5m]) > 0
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusScrapeSampleLimitHit
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          failed {{ printf "%.0f" $value }} scrapes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusscrapesamplelimithit
        summary: Prometheus has failed scrapes that have exceeded the configured sample_limit
      expr: increase(prometheus_target_scrapes_exceeded_sample_limit_total[5m]) > 0
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusTargetSyncFailure
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          {{ printf "%.0f" $value }} targets
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustargetsyncfailure
        summary: Prometheus has failed to sync targets because of invalid configuration
      expr: increase(prometheus_target_sync_failed_total[30m]) > 0
      for: 5m
      labels:
        severity: critical
    - alert: PrometheusHighQueryLoad
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          {{ $value | humanizePercentage }} used
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheushighqueryload
        summary: Query API has less than 20% available capacity in its query engine
      expr: avg_over_time(prometheus_engine_queries[5m]) / max_over_time(prometheus_engine_queries_concurrent_max[5m]) > 0.8
      for: 15m
      labels:
        severity: warning
    - alert: PrometheusErrorSendingAlertsToAnyAlertmanager
      annotations:
        description: >-
          {{ $labels.namespace }}/{{ $labels.pod }}:
          alertmanager {{ $labels.alertmanager }}:
          {{ $value | humanizePercentage }} errors
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuserrorsendingalertstoanyalertmanager
        summary: Prometheus encounters more than 1% errors sending alerts to Alertmanager
      expr: |-
        min without (alertmanager) (
          rate(prometheus_notifications_errors_total{alertmanager!~``}[5m])
        /
          rate(prometheus_notifications_sent_total{alertmanager!~``}[5m])
        ) > 0.01
      for: 15m
      labels:
        severity: critical
