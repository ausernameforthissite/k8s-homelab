---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prompp
  labels:
    prometheus.io/instance: main
    instance.prometheus.io/main: enable
    instance.prometheus.io/prompp: enable
spec:
  selector:
    matchLabels:
      app: prompp
      instance: prompp
  # seems to generate a shorter config?
  # with RelabelConfig:
  # - watches for all possible endpoint in a single WATCH query
  # - drops endpoints that don't match inside prometheus
  # - there are more unused endpoint in service discovery listing, but load on k8s is O(1)
  # - O(1) constant can be very big in large clusters
  # with RoleSelector:
  # - creates a separate WATCH query for each unique selector
  # - load on k8s is O(N)
  selectorMechanism: RelabelConfig
  # namespaceSelector:
  #   matchNames:
  #   - prometheus
  endpoints:
  - port: http-web
    path: /metrics
    relabelings:
    - targetLabel: instance
      action: replace
      sourceLabels: [ cluster, __meta_kubernetes_namespace, __meta_kubernetes_pod_name ]
      separator: /
    - action: labeldrop
      regex: container|endpoint|service
    - targetLabel: job
      replacement: prometheus
      action: replace
    metricRelabelings:
    - action: drop
      sourceLabels: [ __name__ ]
      regex: go_.*|promhttp_.*
    - action: replace
      sourceLabels: [ rule_group ]
      regex: .*\/([^\/]*)
      targetLabel: rule_group
    - action: replace
      sourceLabels: [ rule_group ]
      regex: .*-(.{36}).yaml;.*
      targetLabel: rule_group_uid
    - action: replace
      sourceLabels: [ rule_group ]
      regex: (.*)-.{36}.yaml;.*
      targetLabel: rule_group_object
    - action: replace
      sourceLabels: [ rule_group ]
      regex: .*;(.*)
      targetLabel: rule_group_name
  - port: reloader-web
    path: /metrics
    relabelings:
    - targetLabel: instance
      action: replace
      sourceLabels: [ cluster, __meta_kubernetes_namespace, __meta_kubernetes_pod_name ]
      separator: /
    - action: labeldrop
      regex: endpoint|service
    - targetLabel: job
      replacement: prometheus
      action: replace
    metricRelabelings:
    - action: keep
      sourceLabels: [ __name__ ]
      regex: reloader_.*
