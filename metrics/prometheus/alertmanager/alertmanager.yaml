---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alertmanager
automountServiceAccountToken: true
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  labels:
    app: alertmanager
    self-monitor: enabled
    prometheus.io/job: alertmanager
spec:
  selector:
    # prometheus operator creates pods with app.kubernetes.io/name label
    app.kubernetes.io/name: alertmanager
  ports:
  - name: http-web
    port: 9093
    targetPort: 9093
    protocol: TCP
  - name: reloader-web
    appProtocol: http
    port: 8080
    targetPort: reloader-web
---
apiVersion: monitoring.coreos.com/v1
kind: Alertmanager
metadata:
  name: main
  labels:
    app: alertmanager
spec:
  version: v0.28.1
  replicas: 1
  serviceAccountName: alertmanager
  automountServiceAccountToken: true
  paused: false
  resources:
    requests:
      cpu: 5m
      memory: 50Mi
    limits:
      memory: 100Mi
  logFormat: logfmt
  logLevel: info
  retention: 120h
  # If empty, it defaults to `alertmanager-<alertmanager-name>`.
  # If either the secret or the `alertmanager.yaml` key is missing,
  # config is empty (effectively dropping alert notifications).
  configSecret: alertmanager-main-config
  alertmanagerConfigSelector:
    matchLabels:
      alertmanager.prometheus.io/instance: main
  # alertmanagerConfigNamespaceSelector: {}
  alertmanagerConfigMatcherStrategy:
    # None: rules of an AlertmanagerConfig apply to all namespaces
    # OnNamespace: rules of an AlertmanagerConfig apply to alerts with {namespace="AlertmanagerConfig_namespace"}
    type: None
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchExpressions:
            # prometheus operator creates pods with app.kubernetes.io/name label
            - { key: app.kubernetes.io/name, operator: In, values: [ alertmanager ] }
  portName: http-web
