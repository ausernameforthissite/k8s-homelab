{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [
    {
      "asDropdown": true,
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "k8s-cluster"
      ],
      "targetBlank": false,
      "title": "Kubernetes",
      "type": "dashboards"
    },
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Metrics",
      "tooltip": "",
      "type": "link",
      "url": "/d/mo6wf2ukdv3l72howqnq/kubernetes3a-pod-containers?${datasource:queryparam}&${cluster:queryparam}&${namespace:queryparam}&${pod:queryparam}&${container:queryparam}&${id:queryparam}&${__url_time_range}"
    }
  ],
  "panels": [
    {
      "datasource": {
        "type": "victoriametrics-logs-datasource",
        "uid": "${logs_source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "bars",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 21,
        "x": 0,
        "y": 0
      },
      "id": 3,
      "maxDataPoints": 250,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "victoriametrics-logs-datasource",
            "uid": "${logs_source}"
          },
          "editorMode": "code",
          "expr": "{\r\nkubernetes.pod_namespace=\"$namespace\"\r\n,kubernetes.pod_name=\"$pod\"\r\n,kubernetes.container_name=\"$container\"\r\n}\r\nkubernetes.container_id:in($id_query)\r\n| stats by (stream) count()",
          "legendFormat": "{{stream}}",
          "queryType": "statsRange",
          "refId": "A"
        }
      ],
      "title": "Count",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "victoriametrics-logs-datasource",
        "uid": "${logs_source}"
      },
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 21,
        "w": 21,
        "x": 0,
        "y": 8
      },
      "id": 1,
      "options": {
        "dedupStrategy": "none",
        "enableInfiniteScrolling": false,
        "enableLogDetails": true,
        "prettifyLogMessage": false,
        "showCommonLabels": false,
        "showLabels": false,
        "showTime": true,
        "sortOrder": "Ascending",
        "wrapLogMessage": false
      },
      "targets": [
        {
          "datasource": {
            "type": "victoriametrics-logs-datasource",
            "uid": "${logs_source}"
          },
          "editorMode": "code",
          "expr": "{\r\nkubernetes.pod_namespace=\"$namespace\",\r\nkubernetes.pod_name=\"$pod\",\r\nkubernetes.container_name=\"$container\",\r\nstream=\"stdout\"\r\n}\r\nkubernetes.container_id:in($id_query)\r\n| drop file, ingest_timestamp, _stream_id, kubernetes.container_image_id, kubernetes.namespace_labels.kubernetes.io/metadata.name, kubernetes.namespace_labels.pod-security.kubernetes.io/enforce, kubernetes.pod_annotations.kubectl.kubernetes.io/default-container, kubernetes.pod_labels.controller-revision-hash, kubernetes.pod_labels.app.kubernetes.io/instance, kubernetes.pod_labels.app.kubernetes.io/managed-by, kubernetes.pod_labels.apps.kubernetes.io/pod-index, kubernetes.pod_labels.app.kubernetes.io/name, kubernetes.pod_labels.app.kubernetes.io/version, kubernetes.pod_labels.statefulset.kubernetes.io/pod-name, kubernetes.pod_owner, source_type",
          "queryType": "instant",
          "refId": "A"
        }
      ],
      "title": "stdout",
      "type": "logs"
    },
    {
      "datasource": {
        "type": "victoriametrics-logs-datasource",
        "uid": "${logs_source}"
      },
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 21,
        "w": 21,
        "x": 0,
        "y": 29
      },
      "id": 2,
      "options": {
        "dedupStrategy": "exact",
        "enableInfiniteScrolling": false,
        "enableLogDetails": true,
        "prettifyLogMessage": false,
        "showCommonLabels": false,
        "showLabels": false,
        "showTime": true,
        "sortOrder": "Ascending",
        "wrapLogMessage": false
      },
      "targets": [
        {
          "datasource": {
            "type": "victoriametrics-logs-datasource",
            "uid": "${logs_source}"
          },
          "editorMode": "code",
          "expr": "{\r\nkubernetes.pod_namespace=\"$namespace\",\r\nkubernetes.pod_name=\"$pod\",\r\nkubernetes.container_name=\"$container\",\r\nstream=\"stderr\"\r\n}\r\nkubernetes.container_id:in($id_query)\r\n| drop file, ingest_timestamp, _stream_id, kubernetes.container_image_id, kubernetes.namespace_labels.kubernetes.io/metadata.name, kubernetes.namespace_labels.pod-security.kubernetes.io/enforce, kubernetes.pod_annotations.kubectl.kubernetes.io/default-container, kubernetes.pod_labels.controller-revision-hash, kubernetes.pod_labels.app.kubernetes.io/instance, kubernetes.pod_labels.app.kubernetes.io/managed-by, kubernetes.pod_labels.apps.kubernetes.io/pod-index, kubernetes.pod_labels.app.kubernetes.io/name, kubernetes.pod_labels.app.kubernetes.io/version, kubernetes.pod_labels.statefulset.kubernetes.io/pod-name, kubernetes.pod_owner, source_type, kubernetes.pod_annotations.cnpg.io/podSpec",
          "legendFormat": "",
          "queryType": "instant",
          "refId": "logs"
        }
      ],
      "title": "stderr",
      "type": "logs"
    }
  ],
  "preload": false,
  "refresh": "360d",
  "schemaVersion": 41,
  "tags": [
    "maintainer:danil",
    "type:logs",
    "k8s-cluster"
  ],
  "templating": {
    "list": [
      {
        "allowCustomValue": false,
        "label": "Data source",
        "name": "datasource",
        "options": [],
        "query": "prometheus",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "allowCustomValue": false,
        "label": "Logs source",
        "name": "logs_source",
        "options": [],
        "query": "victoriametrics-logs-datasource",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "allValue": ".*",
        "allowCustomValue": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "query_result(label_join(up{job=\"kube-state-metrics\", endpoint=\"\"}, \"human_name\", \"/\", \"cluster_type\", \"cluster\"))",
        "label": "cluster",
        "name": "cluster",
        "options": [],
        "query": {
          "qryType": 3,
          "query": "query_result(label_join(up{job=\"kube-state-metrics\", endpoint=\"\"}, \"human_name\", \"/\", \"cluster_type\", \"cluster\"))",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "/human_name=\"(?<text>[^\"]+)|cluster=\"(?<value>[^\"]+)/g",
        "sort": 1,
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "label": "namespace",
        "name": "namespace",
        "options": [],
        "query": "label_values(kube_namespace_status_phase{cluster=\"$cluster\"}, namespace)",
        "refresh": 2,
        "sort": 1,
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "query_result(label_join(last_over_time(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\"}[$__range]), \"human_name\", \"/\", \"workload_type\", \"workload\"))",
        "includeAll": true,
        "name": "workload",
        "options": [],
        "query": {
          "qryType": 3,
          "query": "query_result(label_join(last_over_time(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\"}[$__range]), \"human_name\", \"/\", \"workload_type\", \"workload\"))",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "/human_name=\"(?<text>[^\"]+)|workload=\"(?<value>[^\"]+)/g",
        "sort": 1,
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "query_result(last_over_time(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\"}[$__range]) * on(cluster, namespace, pod, uid) group_left() max by(cluster, namespace, pod, uid) (last_over_time(kube_pod_container_status_ready{cluster=\"$cluster\", namespace=\"$namespace\"}[$__range])))",
        "label": "pod0",
        "name": "pod0",
        "options": [],
        "query": {
          "qryType": 3,
          "query": "query_result(last_over_time(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\"}[$__range]) * on(cluster, namespace, pod, uid) group_left() max by(cluster, namespace, pod, uid) (last_over_time(kube_pod_container_status_ready{cluster=\"$cluster\", namespace=\"$namespace\"}[$__range])))",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "/pod=\"(?<text>[^\"]+)|pod=\"(?<value>[^\"]+)/g",
        "sort": 1,
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "datasource": {
          "type": "victoriametrics-logs-datasource",
          "uid": "${logs_source}"
        },
        "definition": "kubernetes.pod_namespace:$namespace",
        "label": "pod",
        "name": "pod",
        "options": [],
        "query": {
          "field": "kubernetes.pod_name",
          "limit": 1001,
          "query": "kubernetes.pod_namespace:$namespace",
          "refId": "VictoriaLogsVariableQueryEditor-VariableQuery",
          "type": "fieldValue"
        },
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "allValue": ".*",
        "allowCustomValue": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "query_result(last_over_time(kube_pod_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__range]))",
        "includeAll": true,
        "label": "UID",
        "name": "pod_uid",
        "options": [],
        "query": {
          "qryType": 3,
          "query": "query_result(last_over_time(kube_pod_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__range]))",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "/uid=\"(?<text>[^\"]+)|uid=\"(?<value>[^\"]+)/g",
        "sort": 1,
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "query_result(label_replace(last_over_time(container_cpu_usage_seconds_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", uid=~\"$pod_uid\"}[$__range]), \"human_name\", \"main/$1\", \"container\", \"(.*)\") or label_replace(last_over_time(kube_pod_container_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", uid=~\"$pod_uid\"}[$__range]), \"human_name\", \"main/$1\", \"container\", \"(.*)\") or ((max_over_time(kube_pod_status_phase{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\", uid=~\"$pod_uid\", phase=\"Pending\"}[$__range]) == 1) * 0+ on(uid) group_right label_replace(last_over_time(kube_pod_init_container_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", uid=~\"$pod_uid\"}[$__range]), \"human_name\", \"init/$1\", \"container\", \"(.*)\")))",
        "includeAll": false,
        "label": "container",
        "name": "container",
        "options": [],
        "query": {
          "qryType": 3,
          "query": "query_result(label_replace(last_over_time(container_cpu_usage_seconds_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", uid=~\"$pod_uid\"}[$__range]), \"human_name\", \"main/$1\", \"container\", \"(.*)\") or label_replace(last_over_time(kube_pod_container_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", uid=~\"$pod_uid\"}[$__range]), \"human_name\", \"main/$1\", \"container\", \"(.*)\") or ((max_over_time(kube_pod_status_phase{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\", uid=~\"$pod_uid\", phase=\"Pending\"}[$__range]) == 1) * 0+ on(uid) group_right label_replace(last_over_time(kube_pod_init_container_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", uid=~\"$pod_uid\"}[$__range]), \"human_name\", \"init/$1\", \"container\", \"(.*)\")))",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "/human_name=\"(?<text>[^\"]+)|container=\"(?<value>[^\"]+)/g",
        "sort": 1,
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "query_result(label_replace(label_replace(last_over_time(container_cpu_usage_seconds_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", uid=~\"$pod_uid\", container=~\"$container\"}[$__range]),\"human_name\", \"$1\",\"name\", \"(.{8}).*\"),\"id_query\", \"containerd://$1\",\"name\", \"(.+)\"))",
        "description": "label_replace(\nlabel_replace(\nlast_over_time(container_cpu_usage_seconds_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", uid=~\"$pod_uid\", container=~\"$container\"}[$__range]),\n\"human_name\", \"$1\",\"name\", \"(.{8}).*\"\n),\n\"id_query\", \"kubernetes.container_id: $1\",\"name\", \"(.+)\"\n)",
        "includeAll": true,
        "multi": true,
        "name": "id_query",
        "options": [],
        "query": {
          "qryType": 3,
          "query": "query_result(label_replace(label_replace(last_over_time(container_cpu_usage_seconds_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", uid=~\"$pod_uid\", container=~\"$container\"}[$__range]),\"human_name\", \"$1\",\"name\", \"(.{8}).*\"),\"id_query\", \"containerd://$1\",\"name\", \"(.+)\"))",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "/human_name=\"(?<text>[^\"]{8})|id_query=\"(?<value>[^\"]+)/g",
        "sort": 1,
        "type": "query"
      },
      {
        "baseFilters": [],
        "datasource": {
          "type": "victoriametrics-logs-datasource",
          "uid": "${logs_source}"
        },
        "filters": [],
        "name": "Filters",
        "type": "adhoc"
      }
    ]
  },
  "time": {
    "from": "now-2d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Container / Logs",
  "uid": "mo6wf2wqnq",
  "version": 0
}
