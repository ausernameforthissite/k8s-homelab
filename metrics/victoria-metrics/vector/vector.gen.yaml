---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector
  namespace: "victoria-metrics"
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: Agent
    
automountServiceAccountToken: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector
  namespace: "victoria-metrics"
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: Agent
    
data:
  vector.yaml: |
    api:
      address: 0.0.0.0:8686
      enabled: true
      playground: true
    data_dir: /vector-data-dir
    sinks:
      exporter:
        address: 0.0.0.0:9090
        inputs:
        - internal_metrics
        type: prometheus_exporter
      vlogs:
        api_version: v8
        compression: gzip
        endpoints:
        - http://vlogs-server-0.vlogs-server.victoria-metrics.svc.cluster.local.:9428/insert/elasticsearch
        healthcheck:
          enabled: false
        inputs:
        - parser
        mode: bulk
        request:
          headers:
            AccountID: "0"
            ProjectID: "0"
            VL-Msg-Field: message,msg,_msg,log.msg,log.message,log
            VL-Stream-Fields: stream,kubernetes.pod_name,kubernetes.container_name,kubernetes.pod_namespace
            VL-Time-Field: timestamp
        type: elasticsearch
    sources:
      internal_metrics:
        type: internal_metrics
      k8s:
        type: kubernetes_logs
    transforms:
      parser:
        inputs:
        - k8s
        source: |
          .log = parse_json(.message) ?? .message
          del(.message)
        type: remap
---
# Permissions to use Kubernetes API.
# Requires that RBAC authorization is enabled.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vector
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: Agent
    
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - nodes
      - pods
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vector
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: Agent
    
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vector
subjects:
  - kind: ServiceAccount
    name: vector
    namespace: "victoria-metrics"
---
apiVersion: v1
kind: Service
metadata:
  name: vector-headless
  namespace: "victoria-metrics"
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: Agent
    
  annotations:
spec:
  clusterIP: None
  ports:    
    - name: api
      port: 8686
      protocol: TCP
      targetPort: 8686
    - name: exporter
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: Agent
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: vector
  namespace: "victoria-metrics"
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: Agent
    
  annotations:
spec:
  ports:    
    - name: api
      port: 8686
      protocol: TCP
      targetPort: 8686
    - name: exporter
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: Agent
  type: ClusterIP
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vector
  namespace: "victoria-metrics"
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: Agent
    
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: vector
      app.kubernetes.io/component: Agent
  minReadySeconds: 0
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: vector
        app.kubernetes.io/component: Agent
        vector.dev/exclude: "true"
    spec:
      serviceAccountName: vector
      dnsPolicy: ClusterFirst
      containers:
        - name: vector
          image: "timberio/vector:0.46.1-distroless-libc"
          imagePullPolicy: IfNotPresent
          args:
            - --watch-config
            - --config-dir=/etc/vector/
          env:
            - name: VECTOR_LOG
              value: "info"
            - name: VECTOR_SELF_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: VECTOR_SELF_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VECTOR_SELF_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PROCFS_ROOT
              value: "/host/proc"
            - name: SYSFS_ROOT
              value: "/host/sys"
          ports:      
            - name: api
              containerPort: 8686
              protocol: TCP
            - name: exporter
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: "/vector-data-dir"
            - name: config
              mountPath: "/etc/vector/"
              readOnly: true
            - mountPath: /var/log/
              name: var-log
              readOnly: true
            - mountPath: /var/lib
              name: var-lib
              readOnly: true
            - mountPath: /host/proc
              name: procfs
              readOnly: true
            - mountPath: /host/sys
              name: sysfs
              readOnly: true
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          projected:
            sources:
              - configMap:
                  name: vector
        - name: data
          hostPath:
            path: "/var/lib/vector"
        - hostPath:
            path: /var/log/
          name: var-log
        - hostPath:
            path: /var/lib/
          name: var-lib
        - hostPath:
            path: /proc
          name: procfs
        - hostPath:
            path: /sys
          name: sysfs
