---
apiVersion: monitoring.coreos.com/v1alpha1
kind: ScrapeConfig
metadata:
  name: kubelet-main
  namespace: prometheus
  labels:
    prometheus.io/instance: main
    instance.prometheus.io/main: enable
    instance.prometheus.io/prompp: enable
spec:
  kubernetesSDConfigs:
  - role: Node
  scheme: HTTPS
  metricsPath: /metrics
  tlsConfig:
    ca:
      configMap:
        name: kube-root-ca.crt
        key: ca.crt
  authorization:
    credentials:
      name: prometheus-sa-token
      key: token
  honorLabels: true
  honorTimestamps: true
  trackTimestampsStaleness: true
  relabelings:
  - targetLabel: job
    replacement: kubelet-main
    action: replace
  - targetLabel: cluster_type
    replacement: k8s
    action: replace
  metricRelabelings:
  - action: keep
    sourceLabels: [ __name__ ]
    regex: "\
      kubelet_node_name|\
      kubernetes_feature_enabled|\
      kubernetes_build_info|\
      kubelet_active_pods|\
      kubelet_certificate_.*|\
      kubelet_server_expiration_renew_errors|\
      kubelet_desired_pods|\
      kubelet_running_pods|\
      kubelet_working_pods|\
      kubelet_container_log_filesystem_used_bytes|\
      kubelet_pod_worker_.*|\
      kubelet_volume_stats.*|\
      kubelet_pleg_.*|\
      kubelet_evented_pleg_.*|\
      "
# ---
# apiVersion: monitoring.coreos.com/v1alpha1
# kind: ScrapeConfig
# metadata:
#   name: kubelet-probes
#   namespace: prometheus
#   labels:
#     prometheus.io/instance: main
#     instance.prometheus.io/main: enable
#     instance.prometheus.io/prompp: enable
# spec:
#   kubernetesSDConfigs:
#   - role: Node
#   scheme: HTTPS
#   metricsPath: /metrics/probes
#   tlsConfig:
#     ca:
#       configMap:
#         name: kube-root-ca.crt
#         key: ca.crt
#   authorization:
#     credentials:
#       name: prometheus-sa-token
#       key: token
#   honorLabels: true
#   honorTimestamps: true
#   relabelings:
#   # - action: labeldrop
#   #   regex: endpoint|instance
#   - targetLabel: job
#     replacement: kubelet-probes
