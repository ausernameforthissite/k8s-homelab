---

nameOverride: prometheus-operator
fullnameOverride: prometheus-operator

cleanPrometheusOperatorObjectNames: true

crds:
  enabled: false

defaultRules:
  create: false

alertmanager:
  enabled: false

grafana:
  enabled: false

kubeApiServer:
  enabled: false

kubelet:
  enabled: false

kubeControllerManager:
  enabled: false

coreDns:
  enabled: false

kubeDns:
  enabled: false

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

kubeStateMetrics:
  enabled: false

nodeExporter:
  enabled: false

prometheus:
  enabled: false

thanosRuler:
  enabled: false

prometheusOperator:
  enabled: true
  fullnameOverride: prometheus-operator
  ## Namespaces to scope the interaction of the Prometheus Operator and the apiserver (allow list).
  ## This is mutually exclusive with denyNamespaces. Setting this to an empty object will disable the configuration
  ##
  namespaces: {}
    # releaseNamespace: true
    # additional:
    # - kube-system

  logLevel: debug

  ## Namespaces not to scope the interaction of the Prometheus Operator (deny list).
  ##
  denyNamespaces: []

  ## Filter namespaces to look for prometheus-operator custom resources
  ##
  alertmanagerInstanceNamespaces: []
  alertmanagerConfigNamespaces: []
  prometheusInstanceNamespaces: []
  thanosRulerInstanceNamespaces: []

  kubeletService:
    ## If true, the operator will create and maintain a service for scraping kubelets
    ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/helm/prometheus-operator/README.md
    ##
    enabled: false
    namespace: kube-system
    selector: ""
    ## Use '{{ template "kube-prometheus-stack.fullname" . }}-kubelet' by default
    name: ""

  ## Create Endpoints objects for kubelet targets.
  kubeletEndpointsEnabled: true
  ## Create EndpointSlice objects for kubelet targets.
  kubeletEndpointSliceEnabled: false

  extraArgs:
  #  - --labels="cluster=talos-cluster"
  - -feature-gates=StatusForConfigurationResources=true

  admissionWebhooks:
    enabled: true
    certManager:
      enabled: true
      issuerRef:
        group: cert-manager.io
        name: cluster-ca
        kind: ClusterIssuer
  serviceMonitor:
    selfMonitor: false
