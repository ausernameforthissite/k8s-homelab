---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      initContainers:
      - name: wait-database-ready
        image: docker.io/postgres:15.4-alpine3.18
        command:
        - sh
        - -c
        - |
          trap : TERM INT
          until psql -q "postgresql://$DB_USER:$PGPASSWORD@$DB_HOST:$DB_PORT/$DB_NAME?sslmode=require" -w -XtA -c '\q'
          do
            echo $(date +"%Y-%m-%dT%H:%M:%S%z") Waiting...
            sleep 1 & wait
          done
          echo "successfully connected to $DB_NAME @ $DB_HOST as $DB_USER"
        securityContext:
          readOnlyRootFilesystem: true
        env:
        - name: DB_HOST
          value: postgres
        - name: DB_PORT
          value: '5432'
        - name: DB_NAME
          value: nextcloud
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: nextcloud.postgres.credentials.postgresql.acid.zalan.do
              key: username
        - name: PGPASSWORD
          # PGPASSWORD is picked up by psql implicitly
          valueFrom:
            secretKeyRef:
              name: nextcloud.postgres.credentials.postgresql.acid.zalan.do
              key: password
        - name: PGCONNECT_TIMEOUT
          value: '1'
      - name: init-filesystem
        image: docker.io/nextcloud:31.0.2-fpm
        command:
        - bash
        - -c
        - |
          set -eu
          trap : TERM INT
          umask 0
          /scripts/init-webroot-links.sh /var/www/html/
          (
            set -eu
            if ! flock -n 9; then
              echo "Waiting to acquire Nextcloud lock..."
              flock 9
            fi
            /scripts/init-webroot-mutable.sh /mnt
          ) 9> /mnt/shared-lock/nextcloud-init-sync.lock & wait -n
          echo init-filesystem finished
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /scripts
          name: scripts
        - mountPath: /var/www/html
          name: webroot
        - mountPath: /mnt/config
          name: config
          subPath: config
        - mountPath: /mnt/custom_apps
          name: config
          subPath: custom_apps
        - mountPath: /mnt/themes
          name: config
          subPath: themes
        - mountPath: /mnt/shared-lock
          name: config
          subPath: shared-lock
      - name: install
        image: docker.io/nextcloud:31.0.2-fpm
        command:
        - bash
        - -c
        - |
          set -eu
          trap : TERM INT
          umask 0
          (
            set -eu
            if ! flock -n 9; then
                echo "Waiting to acquire Nextcloud lock..."
                flock 9
            fi
            /scripts/install.sh /mnt/shared-lock/version.php
            /scripts/setup-env.sh
          ) 9> /mnt/shared-lock/nextcloud-init-sync.lock & wait -n
          /scripts/init-php-conf.sh
        securityContext:
          readOnlyRootFilesystem: true
        env:
        - name: DB_TYPE
          value: postgres
        - name: POSTGRES_HOST
          value: postgres
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: nextcloud.postgres.credentials.postgresql.acid.zalan.do
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud.postgres.credentials.postgresql.acid.zalan.do
              key: password
        - name: POSTGRES_DB
          value: nextcloud
        - name: NEXTCLOUD_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: passwords
              key: admin_name
        - name: NEXTCLOUD_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: passwords
              key: admin_password
        - name: NEXTCLOUD_DATA_DIR
          value: /mnt/user-data
        - name: TRUSTED_PROXIES
          valueFrom:
            configMapKeyRef:
              name: nextcloud
              key: trusted_proxies
        - name: PUBLIC_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: public-domain
              key: public_domain
        - name: NEXTCLOUD_INIT_HTACCESS
          value: 'true'
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: passwords
              key: redis_password
        - name: PHP_CONF_D_LOCATION
          value: /mnt/php-conf-d
        volumeMounts:
        - mountPath: /usr/local/etc/php-fpm.d/zzz-custom.conf
          name: php-custom-conf
          subPath: custom.conf.ini
        - mountPath: /mnt/php-conf-d
          name: php-conf-d
        - mountPath: /scripts
          name: scripts
        - mountPath: /docker-entrypoint-hooks.d/pre-installation/pre-install.sh
          name: scripts
          subPath: pre-install.sh
        - mountPath: /var/www/html
          name: webroot
          readOnly: true
        - mountPath: /mnt/user-data
          name: user-data
        - mountPath: /usr/src/nextcloud/config
          name: config
          subPath: config
        - mountPath: /usr/src/nextcloud/custom_apps
          name: config
          subPath: custom_apps
        - mountPath: /usr/src/nextcloud/themes
          name: config
          subPath: themes
        - mountPath: /mnt/shared-lock
          name: config
          subPath: shared-lock
        - mountPath: /tmp
          name: tmp
      - name: init-nginx
        image: docker.io/nextcloud:31.0.2-fpm
        command:
        - bash
        - -c
        - |
          set -eu
          rsync -rlDm \
            --prune-empty-dirs \
            --exclude /config \
            --exclude /lib \
            --exclude /3rdparty \
            --include="*/" \
            --include '*.css' \
            --include '*.js' \
            --include '*.mjs' \
            --include '*.svg' \
            --include '*.gif' \
            --include '*.png' \
            --include '*.jpg' \
            --include '*.ico' \
            --include '*.wasm' \
            --include '*.html' \
            --exclude '*.js.map' \
            --exclude '*.php' \
            --exclude '*.sh' \
            --exclude '*.lock' \
            --exclude '/*' \
            /usr/src/nextcloud/ /var/www/html && ls -la /var/www/html
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /var/www/html
          name: nginx-webroot
      containers:
      - name: nextcloud
        image: docker.io/nextcloud:31.0.2-fpm
        ports:
        - name: php
          containerPort: 9000
        command:
        - /scripts/run.sh
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /scripts
          name: scripts
        - mountPath: /usr/local/etc/php-fpm.d/zzz-custom.conf
          name: php-custom-conf
          subPath: custom.conf.ini
        - mountPath: /usr/local/etc/php/conf.d
          name: php-conf-d
        - mountPath: /var/www/html
          name: webroot
        - mountPath: /mnt/user-data
          name: user-data
        - mountPath: /usr/src/nextcloud/config
          name: config
          subPath: config
        - mountPath: /usr/src/nextcloud/custom_apps
          name: config
          subPath: custom_apps
        - mountPath: /usr/src/nextcloud/themes
          name: config
          subPath: themes
        - mountPath: /tmp
          name: tmp
        resources:
          requests:
            memory: 3Gi
          limits:
            # php-fpm runs a lot of processes (configured via pm.max_children)
            # each process can consume a lot of memory
            memory: 8Gi
      - name: healthcheck
        image: docker.io/daniluzlov/k8s-snippets:fpm-healthcheck-3.18.3
        command:
        - /bin/sh
        - -c
        - |
          trap : TERM INT; sleep infinity & wait
        resources:
          requests:
            memory: 12Mi
          limits:
            memory: 50Mi
        securityContext:
          readOnlyRootFilesystem: true
        readinessProbe:
          periodSeconds: 1
          exec:
            command:
            - /usr/local/bin/php-fpm-healthcheck
      - name: nginx
        image: docker.io/peytonyip/nginx-brotli:1.25.2
        ports:
        - name: http
          containerPort: 8080
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /var/www/html
          name: nginx-webroot
        - mountPath: /var/www/html/custom_apps
          name: config
          subPath: custom_apps
          readOnly: true
        - mountPath: /var/www/html/themes
          name: config
          subPath: themes
          readOnly: true
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: nginx-tmp
        resources:
          requests:
            memory: 10Mi
          limits:
            memory: 100Mi
        livenessProbe:
          failureThreshold: 5
          periodSeconds: 1
          httpGet:
            path: /health
            port: http
        readinessProbe:
          failureThreshold: 1
          periodSeconds: 1
          httpGet:
            path: /health
            port: http
      volumes:
      - name: scripts
        configMap:
          name: nextcloud-scripts
          defaultMode: 0555
      - name: php-custom-conf
        configMap:
          name: php-conf
      - name: webroot
        emptyDir: {}
      - name: user-data
        persistentVolumeClaim:
          claimName: user-data
      - name: config
        persistentVolumeClaim:
          claimName: config
      - name: tmp
        emptyDir: {}
      - name: php-conf-d
        emptyDir: {}
      - name: nginx-webroot
        emptyDir: {}
      - name: nginx-conf
        configMap:
          name: nginx-conf
      - name: nginx-tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: nextcloud
  ports:
  - name: php
    port: 9000
    targetPort: php
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: nextcloud
  ports:
  - name: http
    port: 80
    targetPort: http
