---
apiVersion: v1
kind: ConfigMap
metadata:
  name: appregistry-config
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
data:
  app-registry.yaml: |
    ---
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-config
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
data:
  proxy.yaml: |
    ---
    policy_selector:
      static:
        policy: ocis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-config
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
data:
  web.yaml: |
    ---
    web:
      config:
        options:
          disableFeedbackLink: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ocis-service-registry
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
rules:
- apiGroups:
  - "" # "" indicates the core API group
  resources:
  - pods
  verbs:
  - list
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ocis-service-registry
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ocis-service-registry
subjects:
- kind: ServiceAccount
  name: default
  namespace: ocis
---
apiVersion: v1
kind: Service
metadata:
  name: antivirus
  namespace: ocis
  labels:
    app: antivirus
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: antivirus
  ports:
    - name: metrics-debug
      port: 9277
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: appregistry
  namespace: ocis
  labels:
    app: appregistry
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: appregistry
  ports:
    - name: grpc
      port: 9242
      protocol: TCP
    - name: metrics-debug
      port: 9243
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: audit
  namespace: ocis
  labels:
    app: audit
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: audit
  ports:
    - name: metrics-debug
      port: 9229
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: authmachine
  namespace: ocis
  labels:
    app: authmachine
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: authmachine
  ports:
    - name: grpc
      port: 9166
      protocol: TCP
    - name: metrics-debug
      port: 9167
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: eventhistory
  namespace: ocis
  labels:
    app: eventhistory
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: eventhistory
  ports:
    - name: grpc
      port: 8080
      protocol: TCP
    - name: metrics-debug
      port: 9270
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: ocis
  labels:
    app: frontend
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 9140
      protocol: TCP
    - name: metrics-debug
      port: 9141
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: ocis
  labels:
    app: gateway
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: gateway
  ports:
    - name: grpc
      port: 9142
      protocol: TCP
    - name: metrics-debug
      port: 9143
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: graph
  namespace: ocis
  labels:
    app: graph
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: graph
  ports:
    - name: http
      port: 9120
      protocol: TCP
    - name: metrics-debug
      port: 9124
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: groups
  namespace: ocis
  labels:
    app: groups
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: groups
  ports:
    - name: grpc
      port: 9160
      protocol: TCP
    - name: metrics-debug
      port: 9161
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: idm
  namespace: ocis
  labels:
    app: idm
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: idm
  ports:
    - name: ldaps
      port: 9235
      protocol: TCP
    - name: metrics-debug
      port: 9239
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: idp
  namespace: ocis
  labels:
    app: idp
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: idp
  ports:
    - name: http
      port: 9130
      protocol: TCP
    - name: metrics-debug
      port: 9134
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: ocis
  labels:
    app: nats
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: nats
  ports:
    - name: nats
      port: 9233
      protocol: TCP
    - name: metrics-debug
      port: 9234
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: ocdav
  namespace: ocis
  labels:
    app: ocdav
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: ocdav
  ports:
    - name: http
      port: 8080
      protocol: TCP
    - name: metrics-debug
      port: 9163
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: ocs
  namespace: ocis
  labels:
    app: ocs
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: ocs
  ports:
    - name: http
      port: 9110
      protocol: TCP
    - name: metrics-debug
      port: 9114
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: postprocessing
  namespace: ocis
  labels:
    app: postprocessing
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: postprocessing
  ports:
    - name: metrics-debug
      port: 9255
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
  namespace: ocis
  labels:
    app: proxy
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: proxy
  ports:
    - name: http
      protocol: TCP
      port: 9200
      targetPort: 9200
    - name: metrics-debug
      port: 9205
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: search
  namespace: ocis
  labels:
    app: search
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: search
  ports:
    - name: grpc
      port: 9220
      protocol: TCP
    - name: metrics-debug
      port: 9224
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: settings
  namespace: ocis
  labels:
    app: settings
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: settings
  ports:
    - name: grpc
      port: 9191
      protocol: TCP
    - name: http
      port: 9190
      protocol: TCP
    - name: metrics-debug
      port: 9194
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: sharing
  namespace: ocis
  labels:
    app: sharing
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: sharing
  ports:
    - name: grpc
      port: 9150
      protocol: TCP
    - name: metrics-debug
      port: 9151
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: storagepubliclink
  namespace: ocis
  labels:
    app: storagepubliclink
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: storagepubliclink
  ports:
    - name: grpc
      port: 9178
      protocol: TCP
    - name: metrics-debug
      port: 9179
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: storageshares
  namespace: ocis
  labels:
    app: storageshares
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: storageshares
  ports:
    - name: grpc
      port: 9154
      protocol: TCP
    - name: metrics-debug
      port: 9156
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: storagesystem
  namespace: ocis
  labels:
    app: storagesystem
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: storagesystem
  ports:
    - name: grpc
      port: 9215
      protocol: TCP
    - name: http
      port: 9216
      protocol: TCP
    - name: metrics-debug
      port: 9217
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: storageusers
  namespace: ocis
  labels:
    app: storageusers
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: storageusers
  ports:
    - name: grpc
      port: 9157
      protocol: TCP
    - name: http
      port: 9158
      protocol: TCP
    - name: metrics-debug
      port: 9159
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: store
  namespace: ocis
  labels:
    app: store
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: store
  ports:
    - name: grpc
      port: 9460
      protocol: TCP
    - name: metrics-debug
      port: 9464
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: thumbnails
  namespace: ocis
  labels:
    app: thumbnails
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: thumbnails
  ports:
    - name: grpc
      port: 9185
      protocol: TCP
    - name: http
      port: 9186
      protocol: TCP
    - name: metrics-debug
      port: 9189
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: userlog
  namespace: ocis
  labels:
    app: userlog
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: userlog
  ports:
    - name: http
      port: 8080
      protocol: TCP
    - name: metrics-debug
      port: 9210
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: users
  namespace: ocis
  labels:
    app: users
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: users
  ports:
    - name: grpc
      port: 9144
      protocol: TCP
    - name: metrics-debug
      port: 9145
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: ocis
  labels:
    app: web
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: web
  ports:
    - name: http
      port: 9100
      protocol: TCP
    - name: metrics-debug
      port: 9104
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: webdav
  namespace: ocis
  labels:
    app: webdav
    ocis-metrics: enabled
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    app: webdav
  ports:
    - name: http
      port: 9115
      protocol: TCP
    - name: metrics-debug
      port: 9119
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appregistry
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: appregistry
  replicas: 1 #TODO: https://github.com/owncloud/ocis-charts/issues/48
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: appregistry
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
      annotations:
        checksum/config: 83da9fac8207ac32c1e2fd2c1cf3d5ef86009e398cf393b196245962eb70ea23
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: appregistry
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["app-registry", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: APP_REGISTRY_LOG_COLOR
              value: "false"
            - name: APP_REGISTRY_LOG_LEVEL
              value: "info"
            - name: APP_REGISTRY_LOG_PRETTY
              value: "false"

            - name: APP_REGISTRY_TRACING_ENABLED
              value: "false"
            - name: APP_REGISTRY_TRACING_TYPE
              value: "jaeger"
            - name: APP_REGISTRY_TRACING_ENDPOINT
              value: ""
            - name: APP_REGISTRY_TRACING_COLLECTOR
              value: ""

            - name: APP_REGISTRY_DEBUG_PPROF
              value: "false"

            - name: APP_REGISTRY_GRPC_ADDR
              value: 0.0.0.0:9242
            - name: APP_REGISTRY_DEBUG_ADDR
              value: 0.0.0.0:9243

            - name: APP_REGISTRY_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9242
            - name: metrics-debug
              containerPort: 9243

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: configs
              mountPath: /etc/ocis
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: configs
          configMap:
            name: appregistry-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: audit
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: audit
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: audit
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["audit", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: AUDIT_LOG_COLOR
              value: "false"
            - name: AUDIT_LOG_LEVEL
              value: "info"
            - name: AUDIT_LOG_PRETTY
              value: "false"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6172
            # - name: AUDIT_TRACING_ENABLED
            #   value: "false"
            # - name: AUDIT_TRACING_TYPE
            #   value: "jaeger"
            # - name: AUDIT_TRACING_ENDPOINT
            #   value: ""
            # - name: AUDIT_TRACING_COLLECTOR
            #   value: ""

            - name: AUDIT_DEBUG_PPROF
              value: "false"
            - name: AUDIT_DEBUG_ADDR
              value: 0.0.0.0:9229

            - name: AUDIT_EVENTS_ENDPOINT
              value: nats:9233

            - name: AUDIT_LOG_TO_CONSOLE
              value: "true"
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: metrics-debug
              containerPort: 9229

          volumeMounts:
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
      
      volumes:
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authmachine
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: authmachine
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: authmachine
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: authmachine
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["auth-machine", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: AUTH_MACHINE_LOG_COLOR
              value: "false"
            - name: AUTH_MACHINE_LOG_LEVEL
              value: "info"
            - name: AUTH_MACHINE_LOG_PRETTY
              value: "false"

            - name: AUTH_MACHINE_TRACING_ENABLED
              value: "false"
            - name: AUTH_MACHINE_TRACING_TYPE
              value: "jaeger"
            - name: AUTH_MACHINE_TRACING_ENDPOINT
              value: ""
            - name: AUTH_MACHINE_TRACING_COLLECTOR
              value: ""

            - name: AUTH_MACHINE_DEBUG_PPROF
              value: "false"

            - name: AUTH_MACHINE_GRPC_ADDR
              value: 0.0.0.0:9166
            - name: AUTH_MACHINE_DEBUG_ADDR
              value: 0.0.0.0:9167

            - name: AUTH_MACHINE_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: AUTH_MACHINE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9166
            - name: metrics-debug
              containerPort: 9167

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventhistory
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: eventhistory
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: eventhistory
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: eventhistory
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["eventhistory", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: EVENTHISTORY_LOG_COLOR
              value: "false"
            - name: EVENTHISTORY_LOG_LEVEL
              value: "info"
            - name: EVENTHISTORY_LOG_PRETTY
              value: "false"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6173
            # - name: EVENTHISTORY_TRACING_ENABLED
            #   value: "false"
            # - name: EVENTHISTORY_TRACING_TYPE
            #   value: "jaeger"
            # - name: EVENTHISTORY_TRACING_ENDPOINT
            #   value: ""
            # - name: EVENTHISTORY_TRACING_COLLECTOR
            #   value: ""

            - name: EVENTHISTORY_DEBUG_PPROF
              value: "false"

            - name: EVENTHISTORY_GRPC_ADDR
              value: 0.0.0.0:8080

            - name: EVENTHISTORY_DEBUG_ADDR
              value: 0.0.0.0:9270

            - name: EVENTHISTORY_STORE
              value: "nats-js"
            - name: EVENTHISTORY_STORE_NODES
              value: "nats:9233"

            - name: EVENTHISTORY_EVENTS_ENDPOINT
              value: nats:9233
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 8080
            - name: metrics-debug
              containerPort: 9270

          volumeMounts:
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
      
      volumes:
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: frontend
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["frontend", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: FRONTEND_LOG_COLOR
              value: "false"
            - name: FRONTEND_LOG_LEVEL
              value: "info"
            - name: FRONTEND_LOG_PRETTY
              value: "false"

            - name: FRONTEND_TRACING_ENABLED
              value: "false"
            - name: FRONTEND_TRACING_TYPE
              value: "jaeger"
            - name: FRONTEND_TRACING_ENDPOINT
              value: ""
            - name: FRONTEND_TRACING_COLLECTOR
              value: ""

            - name: FRONTEND_DEBUG_PPROF
              value: "false"

            - name: FRONTEND_HTTP_ADDR
              value: 0.0.0.0:9140
            - name: FRONTEND_DEBUG_ADDR
              value: 0.0.0.0:9141

            - name: FRONTEND_PUBLIC_URL
              value: "https://ocis.owncloud.test"

            - name: OCIS_LDAP_SERVER_WRITE_ENABLED
              value: "true"
            - name: FRONTEND_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: FRONTEND_APP_HANDLER_INSECURE
              value: "false"

            - name: FRONTEND_ARCHIVER_INSECURE
              value: "false"

            - name: FRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD
              value: "false"

            - name: FRONTEND_SEARCH_MIN_LENGTH
              value: "3"

            - name: FRONTEND_ENABLE_RESHARING
              value: "true"

            - name: FRONTEND_ARCHIVER_MAX_SIZE
              value: "1073741824"

            - name: FRONTEND_ARCHIVER_MAX_NUM_FILES
              value: "10000"

            - name: FRONTEND_FULL_TEXT_SEARCH_ENABLED
              value: "false"

            # cache
            # the stat cache is disabled for now for performance reasons, see https://github.com/owncloud/ocis-charts/issues/214
            - name: FRONTEND_OCS_STAT_CACHE_STORE
              value: noop

            - name: OCIS_EDITION
              value: "Community"

            - name: FRONTEND_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key

            - name: OCIS_TRANSFER_SECRET
              valueFrom:
                secretKeyRef:
                  name: "transfer-secret"
                  key: transfer-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9140
            - name: metrics-debug
              containerPort: 9141

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: gateway
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gateway
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: gateway
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["gateway", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: GATEWAY_LOG_COLOR
              value: "false"
            - name: GATEWAY_LOG_LEVEL
              value: "info"
            - name: GATEWAY_LOG_PRETTY
              value: "false"

            - name: GATEWAY_TRACING_ENABLED
              value: "false"
            - name: GATEWAY_TRACING_TYPE
              value: "jaeger"
            - name: GATEWAY_TRACING_ENDPOINT
              value: ""
            - name: GATEWAY_TRACING_COLLECTOR
              value: ""

            - name: GATEWAY_DEBUG_PPROF
              value: "false"

            - name: GATEWAY_GRPC_ADDR
              value: 0.0.0.0:9142
            - name: GATEWAY_DEBUG_ADDR
              value: 0.0.0.0:9143

            - name: GATEWAY_FRONTEND_PUBLIC_URL
              value: "https://ocis.owncloud.test"

            # cache
            # the stat cache is disabled for now for performance reasons, see https://github.com/owncloud/ocis-charts/issues/214
            - name: GATEWAY_STAT_CACHE_STORE
              value: noop
            # provider cache in kubernetes defaults to noop because we might have regularily changing ip addresses
            - name: GATEWAY_PROVIDER_CACHE_STORE
              value: noop
            # create home cache defaults to memory so we don't put too much load on our shared cache
            - name: GATEWAY_CREATE_HOME_CACHE_STORE
              value: memory

            - name: GATEWAY_STORAGE_USERS_MOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "storage-users"
                  key: storage-uuid

            - name: GATEWAY_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: OCIS_TRANSFER_SECRET
              valueFrom:
                secretKeyRef:
                  name: "transfer-secret"
                  key: transfer-secret
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9142
            - name: metrics-debug
              containerPort: 9143

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graph
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: graph
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: graph
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: graph
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["graph", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: GRAPH_LOG_COLOR
              value: "false"
            - name: GRAPH_LOG_LEVEL
              value: "info"
            - name: GRAPH_LOG_PRETTY
              value: "false"

            - name: GRAPH_TRACING_ENABLED
              value: "false"
            - name: GRAPH_TRACING_TYPE
              value: "jaeger"
            - name: GRAPH_TRACING_ENDPOINT
              value: ""
            - name: GRAPH_TRACING_COLLECTOR
              value: ""

            - name: GRAPH_DEBUG_PPROF
              value: "false"

            - name: GRAPH_HTTP_ADDR
              value: 0.0.0.0:9120
            - name: GRAPH_DEBUG_ADDR
              value: 0.0.0.0:9124

            - name: GRAPH_SPACES_WEBDAV_BASE
              value: "https://ocis.owncloud.test"

            
            - name: GRAPH_LDAP_URI
              value: ldaps://idm:9235
            - name: GRAPH_LDAP_CACERT
              value: /etc/ocis/ldap-ca/ldap-ca.crt
            - name: GRAPH_LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ldap-bind-secrets"
                  key: graph-ldap-bind-password
            

            # cache
            - name: GRAPH_CACHE_STORE
              value: "noop"

            - name: GRAPH_EVENTS_ENDPOINT
              value: nats:9233

            - name: GRAPH_APPLICATION_ID
              valueFrom:
                configMapKeyRef:
                  name: "graph"
                  key: application-id

            - name: GRAPH_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: USERLOG_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9120
            - name: metrics-debug
              containerPort: 9124

          volumeMounts:
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            - name: ldap-ca
              mountPath: /etc/ocis/ldap-ca
              readOnly: true
      
      volumes:
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
          
        - name: ldap-ca
          
          secret:
            secretName: "ldap-ca"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: groups
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: groups
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: groups
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: groups
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["groups", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: GROUPS_LOG_COLOR
              value: "false"
            - name: GROUPS_LOG_LEVEL
              value: "info"
            - name: GROUPS_LOG_PRETTY
              value: "false"

            - name: GROUPS_TRACING_ENABLED
              value: "false"
            - name: GROUPS_TRACING_TYPE
              value: "jaeger"
            - name: GROUPS_TRACING_ENDPOINT
              value: ""
            - name: GROUPS_TRACING_COLLECTOR
              value: ""

            - name: GROUPS_DEBUG_PPROF
              value: "false"

            - name: GROUPS_GRPC_ADDR
              value: 0.0.0.0:9160
            - name: GROUPS_DEBUG_ADDR
              value: 0.0.0.0:9161

            - name: GROUPS_LDAP_URI
            
              value: ldaps://idm:9235
            
            - name: GROUPS_LDAP_CACERT
              
              value: /etc/ocis/ldap-ca/ldap-ca.crt
              

            

            - name: GROUPS_LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ldap-bind-secrets"
                  key: reva-ldap-bind-password

            - name: GROUPS_IDP_URL
            
              value: "https://ocis.owncloud.test"
            

            - name: GROUPS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9160
            - name: metrics-debug
              containerPort: 9161

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: ldap-ca
              mountPath: /etc/ocis/ldap-ca
              readOnly: true
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: ocis-config-tmp
          emptyDir: {}
        - name: ldap-ca
          
          secret:
            secretName: "ldap-ca"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: idm
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: idm
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: idm
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      initContainers:
        - name: init-dir #TODO: that should not be needed, needs fix in the idm service
          image: "busybox:stable"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          command: ["mkdir", "-p", "/var/lib/ocis/idm"]
          resources: 
            {}
          volumeMounts:
          - name: idm-data
            mountPath: /var/lib/ocis
      nodeSelector: 
        {}
      containers:
        - name: idm
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["idm", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: IDM_LOG_COLOR
              value: "false"
            - name: IDM_LOG_LEVEL
              value: "info"
            - name: IDM_LOG_PRETTY
              value: "false"

            - name: IDM_TRACING_ENABLED
              value: "false"
            - name: IDM_TRACING_TYPE
              value: "jaeger"
            - name: IDM_TRACING_ENDPOINT
              value: ""
            - name: IDM_TRACING_COLLECTOR
              value: ""

            - name: IDM_DEBUG_PPROF
              value: "false"

            - name: IDM_LDAPS_ADDR
              value: 0.0.0.0:9235
            - name: IDM_DEBUG_ADDR
              value: 0.0.0.0:9239

            - name: IDM_CREATE_DEMO_USERS
              value: "false"

            - name: IDM_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "admin-user"
                  key: password
            - name: IDM_ADMIN_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "admin-user"
                  key: user-id

            - name: IDM_SVC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ldap-bind-secrets"
                  key: graph-ldap-bind-password

            - name: IDM_REVASVC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ldap-bind-secrets"
                  key: reva-ldap-bind-password

            - name: IDM_IDPSVC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ldap-bind-secrets"
                  key: idp-ldap-bind-password

            - name: IDM_LDAPS_CERT
              value: /etc/ocis/ldap-cert/ldap.crt

            - name: IDM_LDAPS_KEY
              value: /etc/ocis/ldap-cert/ldap.key
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: ldaps
              containerPort: 9235
            - name: metrics-debug
              containerPort: 9239

          volumeMounts:
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: ldap-cert
              mountPath: /etc/ocis/ldap-cert
              readOnly: true
            - name: idm-data
              mountPath: /var/lib/ocis
      
      volumes:
        - name: ocis-config-tmp
          emptyDir: {}
        - name: ldap-cert
          secret:
            secretName: "ldap-cert"
        - name: idm-data
          persistentVolumeClaim:
            claimName: idm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: idp
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
  annotations:
    ignore-check.kube-linter.io/env-var-secret: "IDP_ENCRYPTION_SECRET_FILE is no secret, it's the file path to the secret"
spec:
  selector:
    matchLabels:
      app: idp
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: idp
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: idp
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["idp", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: IDP_LOG_COLOR
              value: "false"
            - name: IDP_LOG_LEVEL
              value: "info"
            - name: IDP_LOG_PRETTY
              value: "false"

            - name: IDP_TRACING_ENABLED
              value: "false"
            - name: IDP_TRACING_TYPE
              value: "jaeger"
            - name: IDP_TRACING_ENDPOINT
              value: ""
            - name: IDP_TRACING_COLLECTOR
              value: ""

            - name: IDP_DEBUG_PPROF
              value: "false"

            - name: IDP_HTTP_ADDR
              value: 0.0.0.0:9130
            - name: IDP_DEBUG_ADDR
              value: 0.0.0.0:9134

            - name: IDP_ISS
              value: "https://ocis.owncloud.test"

            - name: IDP_LDAP_URI
              value: ldaps://idm:9235

            - name: IDP_LDAP_TLS_CACERT
              value: /etc/ocis/ldap-ca/ldap-ca.crt

            - name: IDP_LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ldap-bind-secrets"
                  key: idp-ldap-bind-password

            - name: IDP_SIGNING_PRIVATE_KEY_FILES
              value: /etc/ocis/idp/private-key.pem

            - name: IDP_ENCRYPTION_SECRET_FILE
              value: /etc/ocis/idp/encryption.key
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9130
            - name: metrics-debug
              containerPort: 9134

          volumeMounts:
            - name: ocis-data-tmp
              mountPath: /var/lib/ocis # we mount that volume to apply fsGroup to that path, so that the idp can write the temporary idp/tmp/identifier-registration.yaml file
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: ldap-ca
              mountPath: /etc/ocis/ldap-ca
              readOnly: true
            - name: idp-secrets
              mountPath: /etc/ocis/idp
              readOnly: true
      
      volumes:
        - name: ocis-data-tmp
          emptyDir: {}
        - name: ocis-config-tmp
          emptyDir: {}
        - name: ldap-ca
          secret:
            secretName: "ldap-ca"
        - name: idp-secrets
          secret:
            secretName: "idp-secrets"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: nats
  replicas: 1 #TODO: https://github.com/owncloud/ocis-charts/issues/12
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nats
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: nats
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["nats", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: NATS_LOG_COLOR
              value: "false"
            - name: NATS_LOG_LEVEL
              value: "info"
            - name: NATS_LOG_PRETTY
              value: "false"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6174
            # - name: NATS_TRACING_ENABLED
            #   value: "false"
            # - name: NATS_TRACING_TYPE
            #   value: "jaeger"
            # - name: NATS_TRACING_ENDPOINT
            #   value: ""
            # - name: NATS_TRACING_COLLECTOR
            #   value: ""

            - name: NATS_DEBUG_PPROF
              value: "false"

            - name: NATS_NATS_HOST
              value: "0.0.0.0"
            - name: NATS_NATS_PORT
              value: "9233"

            - name: NATS_DEBUG_ADDR
              value: 0.0.0.0:9234
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: nats
              containerPort: 9233
            - name: metrics-debug
              containerPort: 9234

          volumeMounts:
            - name: nats-data
              mountPath: /var/lib/ocis
      
      volumes:
        - name: nats-data
          persistentVolumeClaim:
            claimName: nats
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocdav
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: ocdav
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ocdav
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: ocdav
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["ocdav", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: OCDAV_LOG_COLOR
              value: "false"
            - name: OCDAV_LOG_LEVEL
              value: "info"
            - name: OCDAV_LOG_PRETTY
              value: "false"

            - name: OCDAV_TRACING_ENABLED
              value: "false"
            - name: OCDAV_TRACING_TYPE
              value: "jaeger"
            - name: OCDAV_TRACING_ENDPOINT
              value: ""
            - name: OCDAV_TRACING_COLLECTOR
              value: ""

            - name: OCDAV_DEBUG_PPROF
              value: "false"

            - name: OCDAV_HTTP_ADDR
              value: 0.0.0.0:8080
            - name: OCDAV_DEBUG_ADDR
              value: 0.0.0.0:9163

            - name: OCDAV_PUBLIC_URL
              value: "https://ocis.owncloud.test"

            - name: OCIS_EDITION
              value: "Community"

            - name: OCDAV_INSECURE
              value: "false"

            - name: OCDAV_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: OCDAV_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}
          ports:
            - name: http
              containerPort: 8080
            - name: metrics-debug
              containerPort: 9163
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocs
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: ocs
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ocs
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: ocs
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["ocs", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: OCS_LOG_COLOR
              value: "false"
            - name: OCS_LOG_LEVEL
              value: "info"
            - name: OCS_LOG_PRETTY
              value: "false"

            - name: OCS_TRACING_ENABLED
              value: "false"
            - name: OCS_TRACING_TYPE
              value: "jaeger"
            - name: OCS_TRACING_ENDPOINT
              value: ""
            - name: OCS_TRACING_COLLECTOR
              value: ""

            - name: OCS_DEBUG_PPROF
              value: "false"

            - name: OCS_HTTP_ADDR
              value: 0.0.0.0:9110
            - name: OCS_DEBUG_ADDR
              value: 0.0.0.0:9114

            - name: OCS_IDM_ADDRESS
            
              value: "https://ocis.owncloud.test"
            

            - name: OCS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: OCS_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}
          ports:
            - name: http
              containerPort: 9110
            - name: metrics-debug
              containerPort: 9114
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postprocessing
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: postprocessing
  replicas: 1
  strategy: 
    type: RollingUpdate
  
  template:
    metadata:
      labels:
        app: postprocessing
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: postprocessing
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["postprocessing", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: POSTPROCESSING_LOG_COLOR
              value: "false"
            - name: POSTPROCESSING_LOG_LEVEL
              value: "info"
            - name: POSTPROCESSING_LOG_PRETTY
              value: "false"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6176
            # - name: POSTPROCESSING_TRACING_ENABLED
            #   value: "false"
            # - name: POSTPROCESSING_TRACING_TYPE
            #   value: "jaeger"
            # - name: POSTPROCESSING_TRACING_ENDPOINT
            #   value: ""
            # - name: POSTPROCESSING_TRACING_COLLECTOR
            #   value: ""

            - name: POSTPROCESSING_DEBUG_PPROF
              value: "false"

            - name: POSTPROCESSING_DEBUG_ADDR
              value: 0.0.0.0:9255

            - name: POSTPROCESSING_EVENTS_ENDPOINT
              value: nats:9233

            - name: POSTPROCESSING_STORE
              value: "nats-js"
            - name: POSTPROCESSING_STORE_NODES
              value: "nats:9233"
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: metrics-debug
              containerPort: 9255

          volumeMounts:
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
      
      volumes:
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: proxy
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: proxy
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
      annotations:
        checksum/config: 49c4c136fb814854bc396a864aaf06068234ffe2611dafa9888e78b6e9f7acb8
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: proxy
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["proxy", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: PROXY_LOG_COLOR
              value: "false"
            - name: PROXY_LOG_LEVEL
              value: "info"
            - name: PROXY_LOG_PRETTY
              value: "false"

            - name: PROXY_TRACING_ENABLED
              value: "false"
            - name: PROXY_TRACING_TYPE
              value: "jaeger"
            - name: PROXY_TRACING_ENDPOINT
              value: ""
            - name: PROXY_TRACING_COLLECTOR
              value: ""

            - name: PROXY_DEBUG_PPROF
              value: "false"

            - name: PROXY_HTTP_ADDR
              value: 0.0.0.0:9200
            - name: PROXY_DEBUG_ADDR
              value: 0.0.0.0:9205

            - name: PROXY_ENABLE_BASIC_AUTH
              value: "false"

            - name: PROXY_OIDC_ISSUER
              value: "https://ocis.owncloud.test"

            - name: PROXY_TLS
              value: "false"

            - name: PROXY_OIDC_INSECURE
              value: "false"

            # cache
            - name: PROXY_OIDC_USERINFO_CACHE_STORE
              value: ""
            - name: PROXY_OIDC_USERINFO_CACHE_STORE_NODES
              value: ""

            - name: PROXY_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: PROXY_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9200
            - name: metrics-debug
              containerPort: 9205

          volumeMounts:
            - name: configs
              mountPath: /etc/ocis
      
      volumes:
        - name: configs
          configMap:
            name: proxy-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: search
  replicas: 1 #TODO: https://github.com/owncloud/ocis-charts/issues/15
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: search
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: search
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["search", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: SEARCH_LOG_COLOR
              value: "false"
            - name: SEARCH_LOG_LEVEL
              value: "info"
            - name: SEARCH_LOG_PRETTY
              value: "false"

            - name: SEARCH_TRACING_ENABLED
              value: "false"
            - name: SEARCH_TRACING_TYPE
              value: "jaeger"
            - name: SEARCH_TRACING_ENDPOINT
              value: ""
            - name: SEARCH_TRACING_COLLECTOR
              value: ""

            - name: SEARCH_DEBUG_PPROF
              value: "false"

            - name: SEARCH_GRPC_ADDR
              value: 0.0.0.0:9220
            - name: SEARCH_DEBUG_ADDR
              value: 0.0.0.0:9224

            - name: SEARCH_EVENTS_ENDPOINT
              value: nats:9233
            - name: SEARCH_EXTRACTOR_TYPE
              value: basic

            - name: SEARCH_EXTRACTOR_CS3SOURCE_INSECURE
              value: "false"

            - name: SEARCH_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: SEARCH_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key

            - name: OCIS_ASYNC_UPLOADS
              value: "true"
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9220
            - name: metrics-debug
              containerPort: 9224

          volumeMounts:
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            - name: search-data
              mountPath: /var/lib/ocis
      
      volumes:
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
          
        - name: search-data
          persistentVolumeClaim:
            claimName: search
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: settings
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: settings
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: settings
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: settings
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["settings", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: SETTINGS_LOG_COLOR
              value: "false"
            - name: SETTINGS_LOG_LEVEL
              value: "info"
            - name: SETTINGS_LOG_PRETTY
              value: "false"

            - name: SETTINGS_TRACING_ENABLED
              value: "false"
            - name: SETTINGS_TRACING_TYPE
              value: "jaeger"
            - name: SETTINGS_TRACING_ENDPOINT
              value: ""
            - name: SETTINGS_TRACING_COLLECTOR
              value: ""

            - name: SETTINGS_DEBUG_PPROF
              value: "false"

            # cache
            - name: SETTINGS_CACHE_STORE
              value: "memory"

            - name: SETTINGS_HTTP_ADDR
              value: 0.0.0.0:9190
            - name: SETTINGS_GRPC_ADDR
              value: 0.0.0.0:9191
            - name: SETTINGS_DEBUG_ADDR
              value: 0.0.0.0:9194
            - name: SETTINGS_ADMIN_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "admin-user"
                  key: user-id
            - name: SETTINGS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: OCIS_SYSTEM_USER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "storage-system"
                  key: api-key
            - name: OCIS_SYSTEM_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "storage-system"
                  key: user-id
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}
          ports:
            - name: http
              containerPort: 9190
            - name: grpc
              containerPort: 9191
            - name: metrics-debug
              containerPort: 9194
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sharing
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: sharing
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sharing
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: sharing
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["sharing", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: SHARING_LOG_COLOR
              value: "false"
            - name: SHARING_LOG_LEVEL
              value: "info"
            - name: SHARING_LOG_PRETTY
              value: "false"

            - name: SHARING_TRACING_ENABLED
              value: "false"
            - name: SHARING_TRACING_TYPE
              value: "jaeger"
            - name: SHARING_TRACING_ENDPOINT
              value: ""
            - name: SHARING_TRACING_COLLECTOR
              value: ""

            - name: SHARING_DEBUG_PPROF
              value: "false"

            - name: SHARING_GRPC_ADDR
              value: 0.0.0.0:9150
            - name: SHARING_DEBUG_ADDR
              value: 0.0.0.0:9151

            - name: SHARING_EVENTS_ENDPOINT
              value: nats:9233

            - name: SHARING_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD
              value: "false"

            # user sharing
            - name: SHARING_USER_DRIVER
              value: jsoncs3
            - name: SHARING_USER_JSONCS3_SYSTEM_USER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "storage-system"
                  key: api-key
            - name: SHARING_USER_JSONCS3_SYSTEM_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "storage-system"
                  key: user-id

            # public sharing
            - name: SHARING_PUBLIC_DRIVER
              value: jsoncs3
            - name: SHARING_PUBLIC_JSONCS3_SYSTEM_USER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "storage-system"
                  key: api-key
            - name: SHARING_PUBLIC_JSONCS3_SYSTEM_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "storage-system"
                  key: user-id
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9150
            - name: metrics-debug
              containerPort: 9151

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storagepubliclink
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: storagepubliclink
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: storagepubliclink
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: storagepubliclink
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["storage-publiclink", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: STORAGE_PUBLICLINK_LOG_COLOR
              value: "false"
            - name: STORAGE_PUBLICLINK_LOG_LEVEL
              value: "info"
            - name: STORAGE_PUBLICLINK_LOG_PRETTY
              value: "false"

            - name: STORAGE_PUBLICLINK_TRACING_ENABLED
              value: "false"
            - name: STORAGE_PUBLICLINK_TRACING_TYPE
              value: "jaeger"
            - name: STORAGE_PUBLICLINK_TRACING_ENDPOINT
              value: ""
            - name: STORAGE_PUBLICLINK_TRACING_COLLECTOR
              value: ""

            - name: STORAGE_PUBLICLINK_DEBUG_PPROF
              value: "false"

            - name: STORAGE_PUBLICLINK_GRPC_ADDR
              value: 0.0.0.0:9178
            - name: STORAGE_PUBLICLINK_DEBUG_ADDR
              value: 0.0.0.0:9179

            - name: STORAGE_PUBLICLINK_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9178
            - name: metrics-debug
              containerPort: 9179

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storageshares
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: storageshares
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: storageshares
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: storageshares
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["storage-shares", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: STORAGE_SHARES_LOG_COLOR
              value: "false"
            - name: STORAGE_SHARES_LOG_LEVEL
              value: "info"
            - name: STORAGE_SHARES_LOG_PRETTY
              value: "false"

            - name: STORAGE_SHARES_TRACING_ENABLED
              value: "false"
            - name: STORAGE_SHARES_TRACING_TYPE
              value: "jaeger"
            - name: STORAGE_SHARES_TRACING_ENDPOINT
              value: ""
            - name: STORAGE_SHARES_TRACING_COLLECTOR
              value: ""

            - name: STORAGE_SHARES_DEBUG_PPROF
              value: "false"

            - name: STORAGE_SHARES_GRPC_ADDR
              value: 0.0.0.0:9154
            - name: STORAGE_SHARES_DEBUG_ADDR
              value: 0.0.0.0:9156

            - name: STORAGE_SHARES_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9154
            - name: metrics-debug
              containerPort: 9156

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storagesystem
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: storagesystem
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: storagesystem
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: storagesystem
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["storage-system", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            # logging
            - name: STORAGE_SYSTEM_LOG_COLOR
              value: "false"
            - name: STORAGE_SYSTEM_LOG_LEVEL
              value: "info"
            - name: STORAGE_SYSTEM_LOG_PRETTY
              value: "false"

            - name: STORAGE_SYSTEM_TRACING_ENABLED
              value: "false"
            - name: STORAGE_SYSTEM_TRACING_TYPE
              value: "jaeger"
            - name: STORAGE_SYSTEM_TRACING_ENDPOINT
              value: ""
            - name: STORAGE_SYSTEM_TRACING_COLLECTOR
              value: ""

            - name: STORAGE_SYSTEM_DEBUG_PPROF
              value: "false"

            # bind configuration
            - name: STORAGE_SYSTEM_GRPC_ADDR
              value: 0.0.0.0:9215
            - name: STORAGE_SYSTEM_DEBUG_ADDR
              value: 0.0.0.0:9217

            # external availability data gateway
            - name: STORAGE_SYSTEM_HTTP_ADDR
              value: 0.0.0.0:9216
            - name: STORAGE_SYSTEM_DATA_SERVER_URL
              value: http://storagesystem:9216/data

            - name: STORAGE_SYSTEM_DRIVER
              value: ocis
            - name: STORAGE_SYSTEM_OCIS_METADATA_BACKEND
              value: messagepack

            # cache
            - name: STORAGE_SYSTEM_CACHE_STORE
              value: "noop"

            - name: STORAGE_SYSTEM_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "storage-system-jwt-secret"
                  key: storage-system-jwt-secret

            - name: OCIS_SYSTEM_USER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "storage-system"
                  key: api-key

            - name: OCIS_SYSTEM_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "storage-system"
                  key: user-id
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9215
            - name: http
              containerPort: 9216
            - name: metrics-debug
              containerPort: 9217

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: storagesystem-data
              mountPath: /var/lib/ocis
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: storagesystem-data
          persistentVolumeClaim:
            claimName: storagesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storageusers
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: storageusers
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: storageusers
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: storageusers
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["storage-users", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            # logging
            - name: STORAGE_USERS_LOG_COLOR
              value: "false"
            - name: STORAGE_USERS_LOG_LEVEL
              value: "info"
            - name: STORAGE_USERS_LOG_PRETTY
              value: "false"

            - name: STORAGE_USERS_TRACING_ENABLED
              value: "false"
            - name: STORAGE_USERS_TRACING_TYPE
              value: "jaeger"
            - name: STORAGE_USERS_TRACING_ENDPOINT
              value: ""
            - name: STORAGE_USERS_TRACING_COLLECTOR
              value: ""

            - name: STORAGE_USERS_DEBUG_PPROF
              value: "false"

            # bind config
            - name: STORAGE_USERS_GRPC_ADDR
              value: 0.0.0.0:9157
            - name: STORAGE_USERS_DEBUG_ADDR
              value: 0.0.0.0:9159

            # external availability data gateway
            - name: STORAGE_USERS_HTTP_ADDR
              value: 0.0.0.0:9158
            - name: STORAGE_USERS_DATA_SERVER_URL
              value: "http://storageusers:9158/data"

            # oCIS storage driver (decomposed filesystem)
            - name: STORAGE_USERS_DRIVER
              value: ocis
            - name: STORAGE_USERS_OCIS_METADATA_BACKEND
              value: "messagepack"

            # S3ng storage driver (decomposed filesystem)

            # events
            - name: STORAGE_USERS_EVENTS_ENDPOINT
              value: nats:9233

            # Duration in seconds after which uploads will expire.
            - name: STORAGE_USERS_UPLOAD_EXPIRATION
              value: "86400"

            # Settings for how old trash bin items should be deleted
            - name: STORAGE_USERS_PURGE_TRASH_BIN_PERSONAL_DELETE_BEFORE
              value: "30d"
            - name: STORAGE_USERS_PURGE_TRASH_BIN_PROJECT_DELETE_BEFORE
              value: "30d"

            # User ID to use for purging trash bin items
            - name: STORAGE_USERS_PURGE_TRASH_BIN_USER_ID
              value: ""

            - name: OCIS_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key

            # cache
            - name: STORAGE_USERS_FILEMETADATA_CACHE_STORE
              value: "noop"

            - name: STORAGE_USERS_ID_CACHE_STORE
              value: "noop"

            # the stat cache is disabled for now for performance reasons, see https://github.com/owncloud/ocis-charts/issues/214
            - name: STORAGE_USERS_STAT_CACHE_STORE
              value: noop

            - name: STORAGE_USERS_MOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "storage-users"
                  key: storage-uuid

            - name: STORAGE_USERS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: OCIS_TRANSFER_SECRET
              valueFrom:
                secretKeyRef:
                  name: "transfer-secret"
                  key: transfer-secret

            - name: OCIS_ASYNC_UPLOADS
              value: "true"

            - name: STORAGE_USERS_DATA_GATEWAY_URL
              value: "http://frontend:9140/data/"
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9157
            - name: http
              containerPort: 9158
            - name: metrics-debug
              containerPort: 9159

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            - name: storageusers-data
              mountPath: /var/lib/ocis
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
          
        - name: storageusers-data
          persistentVolumeClaim:
            claimName: storageusers
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: store
  replicas: 1 #TODO: https://github.com/owncloud/ocis-charts/issues/113
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: store
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: store
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["store", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: STORE_LOG_COLOR
              value: "false"
            - name: STORE_LOG_LEVEL
              value: "info"
            - name: STORE_LOG_PRETTY
              value: "false"

            - name: STORE_TRACING_ENABLED
              value: "false"
            - name: STORE_TRACING_TYPE
              value: "jaeger"
            - name: STORE_TRACING_ENDPOINT
              value: ""
            - name: STORE_TRACING_COLLECTOR
              value: ""

            - name: STORE_DEBUG_PPROF
              value: "false"

            - name: STORE_GRPC_ADDR
              value: 0.0.0.0:9460
            - name: STORE_DEBUG_ADDR
              value: 0.0.0.0:9464
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9460
            - name: metrics-debug
              containerPort: 9464

          volumeMounts:
            - name: store-data
              mountPath: /var/lib/ocis
      
      volumes:
        - name: store-data
          persistentVolumeClaim:
            claimName: store
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thumbnails
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: thumbnails
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: thumbnails
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: thumbnails
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["thumbnails", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: THUMBNAILS_LOG_COLOR
              value: "false"
            - name: THUMBNAILS_LOG_LEVEL
              value: "info"
            - name: THUMBNAILS_LOG_PRETTY
              value: "false"

            - name: THUMBNAILS_TRACING_ENABLED
              value: "false"
            - name: THUMBNAILS_TRACING_TYPE
              value: "jaeger"
            - name: THUMBNAILS_TRACING_ENDPOINT
              value: ""
            - name: THUMBNAILS_TRACING_COLLECTOR
              value: ""

            - name: THUMBNAILS_DEBUG_PPROF
              value: "false"

            - name: THUMBNAILS_GRPC_ADDR
              value: 0.0.0.0:9185
            - name: THUMBNAILS_HTTP_ADDR
              value: 0.0.0.0:9186
            - name: THUMBNAILS_DEBUG_ADDR
              value: 0.0.0.0:9189

            - name: THUMBNAILS_DATA_ENDPOINT
              value: http://thumbnails:9186/thumbnails/data

            - name: THUMBNAILS_WEBDAVSOURCE_INSECURE
              value: "false"

            - name: THUMBNAILS_CS3SOURCE_INSECURE
              value: "false"

            - name: THUMBNAILS_TRANSFER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "thumbnails-transfer-secret"
                  key: thumbnails-transfer-secret
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9185
            - name: http
              containerPort: 9186
            - name: metrics-debug
              containerPort: 9189

          volumeMounts:
            - name: thumbnails-data
              mountPath: /var/lib/ocis
      
      volumes:
        - name: thumbnails-data
          persistentVolumeClaim:
            claimName: thumbnails
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userlog
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: userlog
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: userlog
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: userlog
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["userlog", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: USERLOG_LOG_COLOR
              value: "false"
            - name: USERLOG_LOG_LEVEL
              value: "info"
            - name: USERLOG_LOG_PRETTY
              value: "false"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6177
            # - name: USERLOG_TRACING_ENABLED
            #   value: "false"
            # - name: USERLOG_TRACING_TYPE
            #   value: "jaeger"
            # - name: USERLOG_TRACING_ENDPOINT
            #   value: ""
            # - name: USERLOG_TRACING_COLLECTOR
            #   value: ""

            - name: USERLOG_DEBUG_PPROF
              value: "false"

            - name: USERLOG_HTTP_ADDR
              value: 0.0.0.0:8080

            - name: USERLOG_DEBUG_ADDR
              value: 0.0.0.0:9210

            - name: USERLOG_STORE
              value: "nats-js"
            - name: USERLOG_STORE_NODES
              value: "nats:9233"

            - name: USERLOG_EVENTS_ENDPOINT
              value: nats:9233

            - name: USERLOG_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key

            - name: USERLOG_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 8080
            - name: metrics-debug
              containerPort: 9210

          volumeMounts:
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
      
      volumes:
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: users
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: users
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: users
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["users", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: USERS_LOG_COLOR
              value: "false"
            - name: USERS_LOG_LEVEL
              value: "info"
            - name: USERS_LOG_PRETTY
              value: "false"

            - name: USERS_TRACING_ENABLED
              value: "false"
            - name: USERS_TRACING_TYPE
              value: "jaeger"
            - name: USERS_TRACING_ENDPOINT
              value: ""
            - name: USERS_TRACING_COLLECTOR
              value: ""

            - name: USERS_DEBUG_PPROF
              value: "false"

            - name: USERS_GRPC_ADDR
              value: 0.0.0.0:9144
            - name: USERS_DEBUG_ADDR
              value: 0.0.0.0:9145

            - name: USERS_LDAP_URI
            
              value: ldaps://idm:9235
            

            - name: USERS_LDAP_CACERT
              
              value: /etc/ocis/ldap-ca/ldap-ca.crt
              

            

            - name: USERS_LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ldap-bind-secrets"
                  key: reva-ldap-bind-password
            - name: USERS_IDP_URL
            
              value: "https://ocis.owncloud.test"
            

            - name: USERS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9144
            - name: metrics-debug
              containerPort: 9145

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: ldap-ca
              mountPath: /etc/ocis/ldap-ca
              readOnly: true
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: ocis-config-tmp
          emptyDir: {}
        - name: ldap-ca
          
          secret:
            secretName: "ldap-ca"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: web
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
      annotations:
        checksum/config: 539f7634848bc3ecb6eb166453a7e1ac7425bde62184af014494d9a322f0b62e
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: web
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["web", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: WEB_LOG_COLOR
              value: "false"
            - name: WEB_LOG_LEVEL
              value: "info"
            - name: WEB_LOG_PRETTY
              value: "false"

            - name: WEB_TRACING_ENABLED
              value: "false"
            - name: WEB_TRACING_TYPE
              value: "jaeger"
            - name: WEB_TRACING_ENDPOINT
              value: ""
            - name: WEB_TRACING_COLLECTOR
              value: ""

            - name: WEB_DEBUG_PPROF
              value: "false"

            - name: WEB_HTTP_ADDR
              value: 0.0.0.0:9100
            - name: WEB_DEBUG_ADDR
              value: 0.0.0.0:9104

            - name: WEB_OIDC_AUTHORITY
              value: "https://ocis.owncloud.test"

            - name: WEB_OIDC_CLIENT_ID
              value: "web"

            - name: WEB_UI_THEME_SERVER
              value: https://ocis.owncloud.test

            - name: WEB_UI_CONFIG_SERVER
              value: "https://ocis.owncloud.test"

            - name: WEB_OPTION_CONTEXTHELPERS_READ_MORE
              value: "true"

            - name: WEB_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9100
            - name: metrics-debug
              containerPort: 9104

          volumeMounts:
            - name: configs
              mountPath: /etc/ocis
            - name: web-data
              mountPath: /var/lib/ocis
      
      volumes:
        - name: configs
          configMap:
            name: web-config
        - name: web-data
          persistentVolumeClaim:
            claimName: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webdav
  namespace: ocis
  labels:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
spec:
  selector:
    matchLabels:
      app: webdav
  replicas: 1
  
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: webdav
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
    spec:
      automountServiceAccountToken: true
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      nodeSelector: 
        {}
      containers:
        - name: webdav
          image: "owncloud/ocis:4.0.1"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["webdav", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "kubernetes"
            - name: MICRO_REGISTRY_ADDRESS
              value: ""

            - name: WEBDAV_LOG_COLOR
              value: "false"
            - name: WEBDAV_LOG_LEVEL
              value: "info"
            - name: WEBDAV_LOG_PRETTY
              value: "false"

            - name: WEBDAV_TRACING_ENABLED
              value: "false"
            - name: WEBDAV_TRACING_TYPE
              value: "jaeger"
            - name: WEBDAV_TRACING_ENDPOINT
              value: ""
            - name: WEBDAV_TRACING_COLLECTOR
              value: ""

            - name: WEBDAV_DEBUG_PPROF
              value: "false"

            - name: WEBDAV_HTTP_ADDR
              value: 0.0.0.0:9115
            - name: WEBDAV_DEBUG_ADDR
              value: 0.0.0.0:9119

            - name: OCIS_PUBLIC_URL
              value: "https://ocis.owncloud.test"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}
          ports:
            - name: http
              containerPort: 9115
            - name: metrics-debug
              containerPort: 9119
---
---
---
---
---
---
