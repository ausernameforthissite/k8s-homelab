<?xml version="1.0" encoding="UTF-8" ?>

<Server version="8">
    <Name>OvenMediaEngine</Name>
    <!-- Host type (origin/edge) -->
    <Type>origin</Type>
    <!-- Specify IP address to bind (* means all IPs) -->
    <IP>*</IP>
    <PrivacyProtection>false</PrivacyProtection>
    <!-- 
    To get the public IP address(mapped address of stun) of the local server. 
    This is useful when OME cannot obtain a public IP from an interface, such as AWS or docker environment. 
    If this is successful, you can use ${PublicIP} in your settings.
    -->
    <!-- If the STUN server is not available, OME will hang for a minute at startup, therefor it may be beneficial to disable it -->
    <!-- <StunServer>stun.ovenmediaengine.com:13478</StunServer> -->

    <Modules>
        <!-- 
        Currently OME only supports h2 like all browsers do. Therefore, HTTP/2 only works on TLS ports.			
        -->
        <HTTP2>
            <Enable>true</Enable>
        </HTTP2>

        <LLHLS>
            <Enable>true</Enable>
        </LLHLS>

        <!-- P2P works only in WebRTC and is experiment feature -->
        <P2P>
            <!-- disabled by default -->
            <Enable>false</Enable>
            <MaxClientPeersPerHostPeer>2</MaxClientPeersPerHostPeer>
        </P2P>
    </Modules>

    <!-- Settings for the ports to bind -->
    <Bind>
        <!-- Enable this configuration if you want to use API Server -->
        <Managers>
            <API>
                <Port>${env:OME_API_PORT:8081}</Port>
                <WorkerCount>1</WorkerCount>
            </API>
        </Managers>
        <Providers>
            <!-- Pull providers -->
            <RTSPC>
                <WorkerCount>1</WorkerCount>
            </RTSPC>
            <OVT>
                <WorkerCount>1</WorkerCount>
            </OVT>
            <!-- Push providers -->
            <RTMP>
                <Port>${env:OME_RTMP_PROV_PORT:1935}</Port>
                <WorkerCount>1</WorkerCount>
            </RTMP>
            <SRT>
                <Port>${env:OME_SRT_PROV_PORT:9999}</Port>
                <WorkerCount>1</WorkerCount>
            </SRT>
            <!--
            <MPEGTS>
                    <- Listen on port 4000
                    This is just a demonstration to show that you can configure the port in several ways ->
                    <Port>${env:OME_MPEGTS_PROV_PORT:4000-4001,4004,4005/udp}</Port>
                <Port>${env:OME_MPEGTS_PROV_PORT:4000-4005/udp}</Port>
            </MPEGTS>
            -->
            <WebRTC>
                <Signalling>
                    <Port>${env:OME_WEBRTC_SIGNALLING_PORT:3333}</Port>
                    <TLSPort>${env:OME_WEBRTC_SIGNALLING_TLS_PORT:3334}</TLSPort>
                    <WorkerCount>1</WorkerCount>
                </Signalling>
                <IceCandidates>
                    <IceCandidate>${env:PublicIP:*}:${env:OME_WEBRTC_CANDIDATE_PORT:10000/udp}</IceCandidate>
                    <TcpRelay>${env:PublicIP:*}:${env:OME_WEBRTC_TCP_RELAY_PORT:3478}</TcpRelay>
                    <TcpRelay>${env:OME_PUBLIC_ADDRESS:*}:${env:OME_WEBRTC_TCP_RELAY_PORT:3478}</TcpRelay>
                    <TcpRelay>${env:OME_LOCAL_ADDRESS:*}:${env:OME_WEBRTC_TCP_RELAY_PORT:3478}</TcpRelay>
                    <!-- <TcpForce>true</TcpForce> -->
                    <TcpRelayWorkerCount>1</TcpRelayWorkerCount>
                </IceCandidates>
            </WebRTC>
        </Providers>

        <Publishers>
            <!-- The OVT is protocol for ORIGIN-EDGE -->
            <OVT>
                <Port>${env:OME_ORIGIN_PORT:9000}</Port>
                <WorkerCount>1</WorkerCount>
            </OVT>
            <LLHLS>
                <Port>${env:OME_LLHLS_STREAM_PORT:3333}</Port>
                <TLSPort>${env:OME_LLHLS_STREAM_TLS_PORT:3334}</TLSPort>
                <WorkerCount>1</WorkerCount>
            </LLHLS>
            <WebRTC>
                <Signalling>
                    <Port>${env:OME_WEBRTC_SIGNALLING_PORT:3333}</Port>
                    <TLSPort>${env:OME_WEBRTC_SIGNALLING_TLS_PORT:3334}</TLSPort>
                    <WorkerCount>1</WorkerCount>
                </Signalling>
                <IceCandidates>
                    <IceCandidate>${env:PublicIP:*}:${env:OME_WEBRTC_CANDIDATE_PORT:10000/udp}</IceCandidate>
                    <!--
                        IceCandidate must be a valid IP or a resolvable DNS
                        if OME is having troubles with DNS, it will hang on name resolution on startup, and then throuw out invalid addresses
                    -->
                    <!-- <IceCandidate>${env:OME_PUBLIC_ADDRESS:*}:${env:OME_WEBRTC_CANDIDATE_PORT:10000/udp}</IceCandidate> -->
                    <!-- <IceCandidate>${env:OME_LOCAL_ADDRESS:*}:${env:OME_WEBRTC_CANDIDATE_PORT:10000/udp}</IceCandidate> -->
                    <TcpRelay>${env:PublicIP:*}:${env:OME_WEBRTC_TCP_RELAY_PORT:3478}</TcpRelay>
                    <!-- TCP relay (== TURN server) doesn't use DNS resolution -->
                    <TcpRelay>${env:OME_PUBLIC_ADDRESS:*}:${env:OME_WEBRTC_TCP_RELAY_PORT:3478}</TcpRelay>
                    <TcpRelay>${env:OME_LOCAL_ADDRESS:*}:${env:OME_WEBRTC_TCP_RELAY_PORT:3478}</TcpRelay>
                    <!-- <TcpForce>true</TcpForce> -->
                    <TcpRelayWorkerCount>1</TcpRelayWorkerCount>
                </IceCandidates>
            </WebRTC>
            <Thumbnail>
                <Port>${env:OME_WEBRTC_SIGNALLING_PORT:3333}</Port>
                <!-- <TLSPort>20081</TLSPort> -->
            </Thumbnail>
        </Publishers>
    </Bind>

    <Managers>
        <Host>
            <Names>
                <Name>*</Name>
            </Names>
            <!-- <TLS>
                <CertPath>airensoft_com.crt</CertPath>
                <KeyPath>airensoft_com.key</KeyPath>
                <ChainCertPath>airensoft_com_chain.crt</ChainCertPath>
            </TLS> -->
        </Host>
        <API>
            <AccessToken>${env:OME_ACCESS_TOKEN}</AccessToken>
            <CrossDomains>
                <Url>*</Url>
            </CrossDomains>
        </API>
    </Managers>

    <VirtualHosts>
        <VirtualHost include="VHost*.xml" />
        <VirtualHost>
            <Name>default</Name>
            <!--Distribution is a value that can be used when grouping the same vhost distributed across multiple servers. This value is output to the events log, so you can use it to aggregate statistics. -->
            <Distribution>ovenmediaengine.com</Distribution>

            <!-- Settings for multi ip/domain and TLS -->
            <Host>
                <Names>
                    <Name>*</Name>
                </Names>
            </Host>

            <!-- Refer https://airensoft.gitbook.io/ovenmediaengine/signedpolicy
            <SignedPolicy>
                <PolicyQueryKeyName>policy</PolicyQueryKeyName>
                <SignatureQueryKeyName>signature</SignatureQueryKeyName>
                <SecretKey>aKq#1kj</SecretKey>

                <Enables>
                    <Providers>rtmp,webrtc,srt</Providers>
                    <Publishers>webrtc,hls,llhls,dash,lldash</Publishers>
                </Enables>
            </SignedPolicy>
            -->

            <!-- In order to use OriginMap, you must enable OVT Publisher in Origin and OVT Provider in Edge. -->
            <OriginMapStore>
                <RedisServer>
                    <Host>${env:REDIS_SERVICE:redis}:${env:REDIS_PORT:6379}</Host>
                    <Auth>${env:REDIS_PASS}</Auth>
                </RedisServer>
                <!-- This is only needed for the origin server and used to register the ovt address of the stream.  -->
                <OriginHostName>${env:OME_HOST_IP}</OriginHostName>
            </OriginMapStore>

            <!-- Default CORS Settings -->
            <CrossDomains>
                <Url>*</Url>
            </CrossDomains>

            <!-- Settings for applications -->
            <Applications>
                <Application include="/mnt/application-config.d/*-main.xml" />
            </Applications>
        </VirtualHost>
    </VirtualHosts>
</Server>
