---
# Source: kgateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kgateway
  namespace: ingress-kgateway
  labels:
    helm.sh/chart: kgateway-v2.1.0-main
    kgateway: kgateway
    app.kubernetes.io/name: kgateway
    app.kubernetes.io/instance: kgateway
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kgateway/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kgateway-ingress-kgateway
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - nodes
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.kgateway.dev
  resources:
  - backendconfigpolicies
  - backends
  - directresponses
  - gatewayextensions
  - gatewayparameters
  - httplistenerpolicies
  - trafficpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.kgateway.dev
  resources:
  - backendconfigpolicies/status
  - backends/status
  - directresponses/status
  - gatewayextensions/status
  - gatewayparameters/status
  - httplistenerpolicies/status
  - trafficpolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies
  - gateways
  - grpcroutes
  - httproutes
  - referencegrants
  - tcproutes
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies/status
  - gatewayclasses/status
  - gateways/status
  - grpcroutes/status
  - httproutes/status
  - tcproutes/status
  - tlsroutes/status
  verbs:
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.x-k8s.io
  resources:
  - xlistenersets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.x-k8s.io
  resources:
  - xlistenersets/status
  verbs:
  - patch
  - update
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  - serviceentries
  - workloadentries
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - security.istio.io
  resources:
  - authorizationpolicies
  verbs:
  - get
  - list
  - watch
---
# Source: kgateway/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kgateway-role-ingress-kgateway
subjects:
- kind: ServiceAccount
  name: kgateway
  namespace: ingress-kgateway
roleRef:
  kind: ClusterRole
  name: kgateway-ingress-kgateway
  apiGroup: rbac.authorization.k8s.io
---
# Source: kgateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kgateway
  namespace: ingress-kgateway
  labels:
    helm.sh/chart: kgateway-v2.1.0-main
    kgateway: kgateway
    app.kubernetes.io/name: kgateway
    app.kubernetes.io/instance: kgateway
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - name: grpc-xds
    protocol: TCP
    port: 9977
    targetPort: 9977
  - name: grpc-xds-agw
    protocol: TCP
    port: 9978
    targetPort: 9978
  selector:
    kgateway: kgateway
    app.kubernetes.io/name: kgateway
    app.kubernetes.io/instance: kgateway
---
# Source: kgateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kgateway
  namespace: ingress-kgateway
  labels:
    helm.sh/chart: kgateway-v2.1.0-main
    kgateway: kgateway
    app.kubernetes.io/name: kgateway
    app.kubernetes.io/instance: kgateway
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      kgateway: kgateway
      app.kubernetes.io/name: kgateway
      app.kubernetes.io/instance: kgateway
  template:
    metadata:
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9092"
        prometheus.io/scrape: "true"
      labels:
        kgateway: kgateway
        app.kubernetes.io/name: kgateway
        app.kubernetes.io/instance: kgateway
    spec:
      serviceAccountName: kgateway
      securityContext:
        {}
      containers:
        - name: kgateway
          securityContext:
            {}
          image: "cr.kgateway.dev/kgateway-dev/kgateway:v2.1.0-main"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9977
              name: grpc-xds
              protocol: TCP
            - containerPort: 9978
              name: grpc-xds-agw
              protocol: TCP
            - containerPort: 9093
              name: health
              protocol: TCP
            - containerPort: 9092
              name: metrics
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 9093
            initialDelaySeconds: 3
            periodSeconds: 10
          env:
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  divisor: "1"
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  divisor: "1"
                  resource: limits.cpu
            - name: KGW_LOG_LEVEL
              value: "info"
            - name: KGW_XDS_SERVICE_NAME
              value: kgateway
            - name: KGW_XDS_SERVICE_PORT
              value: "9977"
            - name: KGW_AGENTGATEWAY_XDS_SERVICE_PORT
              value: "9978"
            - name: KGW_DEFAULT_IMAGE_REGISTRY
              value: cr.kgateway.dev/kgateway-dev
            - name: KGW_DEFAULT_IMAGE_TAG
              value: v2.1.0-main
            - name: KGW_DEFAULT_IMAGE_PULL_POLICY
              value: IfNotPresent
            - name: KGW_DISCOVERY_NAMESPACE_SELECTORS
              value: "[]"
            - name: KGW_POLICY_MERGE
              value: "{}"
            # TODO: Remove this once the cleanup is done. Required as the gloo-system
            # namespace is the default namespace and conformance will fail as a result.
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {}
