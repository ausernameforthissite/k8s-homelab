---
# Source: kubed/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubed
  namespace: kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubed/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kubed-apiserver-cert
  namespace: kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lSQVB4V3UyODlkNmhwOHJ2UVBtQURDekF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpNd05URTBNVFF3TWpJd1doY05Nek13TlRFeE1UUXdNakl3V2pBUQpNUTR3REFZRFZRUURFd1ZyZFdKbFpEQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFPUDdnaGkya1g0VlJ6UWlNZ1ljNXhOUncyZXNjOE1jMit5M3F1cmRIbTlOWlc3VEFrSXg2OXJoY0xzWnJPamEKblVXQVNwWW9xay9PdUkxd0Vyb2JLVDNuQ0pVMjl5WUoxNFNQT0xPdHFSbklzcFJyeGNRVkJYbmJKcG4ydFR5YwpCRWJZbm9PN2FQc0RGdGhIVExyZG10WHBjVHZrb1V1akphaWNrMjVBK2oxYUdYVXo1WFN1RFI3K0hCYXgvOUdmCkdBYTlkb1dsa29KTitocEwvOEQ2U01jL04zNW5Ma2pwODhLcjAwMEJSRnVFWWsxZkFoZHpnaW1scTVSN1pRMWMKYSs5SkpMQjZmUDNXK1ZoazBEK1FOZ0MxVjYrWWNzVTBIcnFrYnBJZ012bVVlT01LUmh6TTE2OUF1WTBhUmlVdApqYzhTUHk5K3djSnhhbmQ0V3FlaXdxVUNBd0VBQWFPQmlqQ0JoekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEClZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGoKQkJnd0ZvQVVadXlEOWJNS1ZtSGFKQllBUHZ3UWNqb3BEMEV3SndZRFZSMFJCQ0F3SG9JTGEzVmlaV1F1YTNWaQpaV1NDRDJ0MVltVmtMbXQxWW1Wa0xuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBa1FYMmxtL3Z3elVzCm1uaDBZbGxvdDhTQW83VDJMMDN5ZWhFZU1EVnNOTzg0cnJpWHVCb200OU5aMnJObXIzdm9HTWhYa0JTWEtjMGQKZ3dYZXJ6a08zK1FRdlJXTzc3cmZIcU1oVXo4ZU5BMUJnUDl1RnJQN2MrVEtOcHRiR1gzOTY3TlViL1JlUXZXTApDalQ2WTloRFlLR2pDRzFpdUNuL0NqelBBYVQ5aTNmbitoZGVZQ3k3V04xNlZnaCszOVZKK2QvakpzNS9LejNaCnRoUjZJUjJUa2NDQStidmtBRXdkVml0TUdDdGhtYXM5T1BoOGRlWnlWdTJKU1VkNndZaVRyM3R4N3g1b3o2OVMKd3A1aksrS1lEZngyRGdZcWdtQVpSRElTSU5jY01ISFNySlp0RG9HN3B0UFZ1TVRIS01HKzNlYXJVM0FHMkVZUgo1VUFkMUpEL0x3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNC91Q0dMYVJmaFZITkNJeUJoem5FMUhEWjZ4end4emI3TGVxNnQwZWIwMWxidE1DClFqSHIydUZ3dXhtczZOcWRSWUJLbGlpcVQ4NjRqWEFTdWhzcFBlY0lsVGIzSmduWGhJODRzNjJwR2NpeWxHdkYKeEJVRmVkc21tZmExUEp3RVJ0aWVnN3RvK3dNVzJFZE11dDJhMWVseE8rU2hTNk1scUp5VGJrRDZQVm9aZFRQbApkSzROSHY0Y0ZySC8wWjhZQnIxMmhhV1NnazM2R2t2L3dQcEl4ejgzZm1jdVNPbnp3cXZUVFFGRVc0UmlUVjhDCkYzT0NLYVdybEh0bERWeHI3MGtrc0hwOC9kYjVXR1RRUDVBMkFMVlhyNWh5eFRRZXVxUnVraUF5K1pSNDR3cEcKSE16WHIwQzVqUnBHSlMyTnp4SS9MMzdCd25GcWQzaGFwNkxDcFFJREFRQUJBb0lCQURxYUZkRGdiUG1wNG9tbQpHSkcxc0RncEZqOTU5cSs2cFZWdHlNTmlYMFpnOEtmU0dZeUdaSWY0MXc5aEJDOCtzcHFBNWFzL2ZMZlMvV0Z0CjQ0SnZKT1RDbEZRMnNzVFdWczIrT3VjRXhxallDLzlXekprZ2hpM1NoVk9pTk9nRmVwdnpacHVaK3R3NjZRNWoKRlhnYktvZTkzOXR6WTNxYnp6eE9NeDl1R0dUWVhlZ2VZRldLQkJyNUU1WGJuVXIrcUtQbzdsK29SelFMdDFwdApadXQwZjZ3bThHM0NxSDh2Uzh5NE1MeVZOaXg3NFgvWit6WlJiRnA4U2Q3bkt6anRLcE5QRlBhOVk5ZmFLb2F1Ck9Na2xkcTQ2Wnc5Y0JNblNaRUp5K0Q4NStWV1RwcnM2RmovZTZ0c3gwZnVLQXBMdUNYN2wwMG4xWjVkTHprS0cKTGhCOGNZRUNnWUVBN2RwV1Nrc3JqbHROK0JzTmpJWGVvdGt0ZVh2V0xXNXpSNjJ0bk85TjFacEREL0hsZUtoSgpVQk0vTWxmcEtsMW5UNENwLzhWL3ozd0pRb2M5TjdXTmdhYWVoTXA2QWw1ZGtYMTBtVTZDdjdsKzVMd2l0ZTFOCmNISHFQSWQ5QS9xZTFNVE9ja3pnazhVS0N4V0FWd0ppZzZSOVFiT3I5Uk9TcWtkVnNOR29KRlVDZ1lFQTlXQmkKb1JjT1R1a3N6ZFhJNzFJRGN3cTFUb05QczJ6N255Y294bThtQVRFelIweURVUCtyWWpBclNzZ1ZPNncwSkZjbgpxbU9DYWNST0JYOGoweE1OcnltTW4ySnM0Y0lBSWNsY0hpYUtXWENmTWF1bnd5TWJFN2thRXlFQTJLQTlkSHFkCnE1cGFUcVJVY3VCVjZiWXdrMzk2MlhEZkZjeEU4RXVMRGVqbjlSRUNnWUVBNUhJZENOUXo3RkdUakdWbldQMUcKdlVBOEpmOGowWlRRMGhwa3NtTkJiWlB4TDBKVTlOTWxQdXlOZVN2b1BaRmlaWUNkUnBTSlVsMitneEJqWXJ0VQpReDhtQjBKMWR3cnRjWXgrVGJTVGJkT2FwZFJ3dmkxQ2dHcFk0SFA5UmJJVGxTWEZaeENoYml3RW5tcXpUbDV6CkFoOGRVdHBmb1U2QVFsMnJWdDIzVWRVQ2dZQXNJNXQ2V05obEQ0TFV3QWsySzYyZEt5YjBLYURUcU40V2dnZk8Kc2ozRzV4L1BTbzh3cWQwZGU0YStIQUhkeXh0U0VpOTdjZzBLazVwcFdMYU1DSmhra3ZmTnovbkFIcExCZ1NSRgo5QzdjNmVwcEYvVEVvSE1GZUQyZGhVbE9ybngva0hMK1pIU3NRdGxDRk9LL2VOdUNIT052YStObFcycG5RMStQCkwvOVIwUUtCZ1FDQ2ZBeU5pT1ZycHk3cXFGR1QzNWJuTkhLQWtER0pDWGJtT1VrWHBFRG9UQml6eXcyc3NYTVEKcHk3T3BYNTFNV0tjWHh0WnJzalJDN0ZvTE5ybXN4R0ViKy84ZDgyaGx6N0NJQ2pHaDJucTZOYjRXVVVFYUd0UgpvLzFPUmNISFNNMUdjWXJVUS9qV3dkYjRkOHdPYzZ4QWRQTkpkQ29OdEFjbDFjek1icmExcWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubed/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kubed
  namespace: kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: kubed/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get", "create", "patch", "delete", "list", "watch"]
- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list"]
- apiGroups: [""]
  resources:
  - events
  verbs: ["create"]
---
# Source: kubed/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubed-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubed
  namespace: kubed
---
# Source: kubed/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubed
subjects:
- kind: ServiceAccount
  name: kubed
  namespace: kubed
---
# Source: kubed/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubed-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubed
  namespace: kubed
---
# Source: kubed/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubed
  namespace: kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
---
# Source: kubed/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubed
  namespace: kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubed
      app.kubernetes.io/instance: kubed
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubed
        app.kubernetes.io/instance: kubed
      annotations:
        checksum/apiregistration.yaml: b5931c5737cb1fc944d9a44e772d8c4bc2e48a948495ecab5699b68808bc6d4f
    spec:
      serviceAccountName: kubed
      containers:
      - name: kubed
        securityContext:
          {}
        image: appscode/kubed:v0.13.2
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --cluster-name=unicorn
        ports:
        - containerPort: 8443
        resources:
          {}
        volumeMounts:
        - name: config
          mountPath: /srv/kubed
        - name: scratch
          mountPath: /tmp
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: config
        secret:
          secretName: kubed
      - name: scratch
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubed-apiserver-cert
      securityContext:
        fsGroup: 65535
