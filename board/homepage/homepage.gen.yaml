---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  labels:
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: homepage
    app.kubernetes.io/version: v0.6.10
    helm.sh/chart: homepage-1.2.3
secrets:
  - name: homepage-sa-token
---
# Source: homepage/templates/common.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: homepage-sa-token
  labels:
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: homepage
    app.kubernetes.io/version: v0.6.10
    helm.sh/chart: homepage-1.2.3
  annotations:
    kubernetes.io/service-account.name: homepage
---
# Source: homepage/templates/rbac.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: homepage
  labels:
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: homepage
    app.kubernetes.io/version: v0.6.10
    helm.sh/chart: homepage-1.2.3
  annotations:
    kubernetes.io/service-account.name: homepage
---
# Source: homepage/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage
  labels:
    helm.sh/chart: homepage-1.2.3
    app.kubernetes.io/name: homepage
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/version: "v0.6.10"
    app.kubernetes.io/managed-by: Helm
    
data:
  bookmarks.yaml: |
    - Developer:
      - Github:
        - abbr: GH
          href: https://github.com/
  docker.yaml: ""
  kubernetes.yaml: |
    mode: cluster
  services.yaml: |
    - My First Group:
      - My First Service:
          description: Homepage is awesome
          href: http://localhost/
    - My Second Group:
      - My Second Service:
          description: Homepage is the best
          href: http://localhost/
    - My Third Group:
      - My Third Service:
          description: "Homepage is \U0001F60E"
          href: http://localhost/
  settings.yaml: ""
  widgets.yaml: |
    - kubernetes:
        cluster:
          cpu: true
          label: cluster
          memory: true
          show: true
          showLabel: true
        nodes:
          cpu: true
          memory: true
          show: true
          showLabel: true
    - search:
        provider: duckduckgo
        target: _blank
---
# Source: homepage/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
  labels:
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: homepage
    app.kubernetes.io/version: v0.6.10
    helm.sh/chart: homepage-1.2.3
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.containo.us
      - traefik.io
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions/status
    verbs:
      - get
---
# Source: homepage/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
  labels:
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: homepage
    app.kubernetes.io/version: v0.6.10
    helm.sh/chart: homepage-1.2.3
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: homepage
---
# Source: homepage/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: homepage
  labels:
    app.kubernetes.io/service: homepage
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: homepage
    app.kubernetes.io/version: v0.6.10
    helm.sh/chart: homepage-1.2.3
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/name: homepage
---
# Source: homepage/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  labels:
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: homepage
    app.kubernetes.io/version: v0.6.10
    helm.sh/chart: homepage-1.2.3
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
      app.kubernetes.io/instance: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
        app.kubernetes.io/instance: homepage
    spec:
      
      serviceAccountName: homepage
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: homepage
          image: "ghcr.io/benphelps/homepage:v0.6.10"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: homepage-config
              subPath: bookmarks.yaml
              mountPath: /app/config/bookmarks.yaml
            - name: homepage-config
              subPath: docker.yaml
              mountPath: /app/config/docker.yaml
            - name: homepage-config
              subPath: kubernetes.yaml
              mountPath: /app/config/kubernetes.yaml
            - name: homepage-config
              subPath: services.yaml
              mountPath: /app/config/services.yaml
            - name: homepage-config
              subPath: settings.yaml
              mountPath: /app/config/settings.yaml
            - name: homepage-config
              subPath: widgets.yaml
              mountPath: /app/config/widgets.yaml
            - name: logs
              mountPath: /app/config/logs
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
      volumes:
        - name: homepage-config
          configMap:
            name: homepage
        - name: logs
          emptyDir:
            {}
---
# Source: homepage/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage
  labels:
    app.kubernetes.io/instance: homepage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: homepage
    app.kubernetes.io/version: v0.6.10
    helm.sh/chart: homepage-1.2.3
  annotations:
    gethomepage.dev/description: Dynamically Detected Homepage
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Dynamic
    gethomepage.dev/icon: homepage.png
    gethomepage.dev/name: Homepage
spec:
  rules:
    - host: "homepage.example.com"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: homepage
                port:
                  number: 3000
