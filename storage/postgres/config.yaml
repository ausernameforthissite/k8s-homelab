apiVersion: acid.zalan.do/v1
kind: OperatorConfiguration
metadata:
  name: postgres-operator
  namespace: postgres-operator
  labels:
    app.kubernetes.io/name: postgres-operator
configuration:
  connection_pooler:
    connection_pooler_default_cpu_limit: "0"
    connection_pooler_default_cpu_request: "0"
    connection_pooler_default_memory_limit: 100Mi
    connection_pooler_default_memory_request: 100Mi
    connection_pooler_max_db_connections: 60
    connection_pooler_mode: transaction
    connection_pooler_number_of_instances: 2
    connection_pooler_schema: pooler
    connection_pooler_user: pooler
  debug:
    debug_logging: true
    enable_database_access: true
  enable_crd_registration: false
  kubernetes:
    cluster_domain: cluster.local
    enable_persistent_volume_claim_deletion: true
    # delete or retain
    persistent_volume_claim_retention_policy:
      when_deleted: retain
      when_scaled: retain
    cluster_labels:
      application: spilo
    cluster_name_label: cluster-name
    enable_pod_antiaffinity: true
    # don't forget to set pod_management_policy=parallel when enable_readiness_probe=true
    #   https://github.com/zalando/postgres-operator/issues/1978
    #   https://github.com/zalando/postgres-operator/issues/2003
    enable_readiness_probe: true
    master_pod_move_timeout: 20m
    pod_antiaffinity_preferred_during_scheduling: true
    pod_antiaffinity_topology_key: kubernetes.io/hostname
    # reqired when using enable_readiness_probe
    pod_management_policy: parallel
    pod_role_label: spilo-role
    pod_terminate_grace_period: 30s
    secret_name_template: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
    spilo_fsgroup: 103
    spilo_runasgroup: 103
    spilo_runasuser: 101
    watched_namespace: '*'
  kubernetes_use_configmaps: false
  load_balancer:
    db_hosted_zone: db.example.com
    enable_master_load_balancer: false
    enable_master_pooler_load_balancer: false
    enable_replica_load_balancer: false
    enable_replica_pooler_load_balancer: false
    external_traffic_policy: Cluster
    master_dns_name_format: '{cluster}.{namespace}.{hostedzone}'
    master_legacy_dns_name_format: '{cluster}.{team}.{hostedzone}'
    replica_dns_name_format: '{cluster}-repl.{namespace}.{hostedzone}'
    replica_legacy_dns_name_format: '{cluster}-repl.{team}.{hostedzone}'
  major_version_upgrade:
    major_version_upgrade_mode: "off"
    minimal_major_version: "15"
    target_major_version: "16"
  max_instances: -1
  min_instances: -1
  patroni:
    enable_patroni_failsafe_mode: false
  postgres_pod_resources:
    default_cpu_limit: "0"
    default_cpu_request: "0"
    default_memory_limit: 500Mi
    default_memory_request: 100Mi
    min_cpu_limit: "0"
    min_memory_limit: 250Mi
  set_memory_request_to_limit: false
  teams_api:
    enable_teams_api: false
  timeouts:
    pod_deletion_wait_timeout: 2m
    pod_label_wait_timeout: 3m
