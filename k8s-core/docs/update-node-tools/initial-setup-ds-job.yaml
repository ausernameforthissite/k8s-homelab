---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: initial-setup
spec:
  selector:
    matchLabels:
      ds-job: initial-setup
  template:
    metadata:
      labels:
        pod-name.meoe.io/mutate: enable
        ds-job: initial-setup
    spec:
      terminationGracePeriodSeconds: 1
      # required for nsenter into PID 1
      hostPID: true
      # required to run without CNI
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Equal
        effect: NoSchedule
      initContainers:
      - name: sysctl
        image: docker.io/buildpack-deps:bookworm-curl
        command:
        - sh
        - -c
        - |
          (
          set -e
          tee /host-etc-sysctl.d/kubernetes.conf << EOF
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          EOF
          tee /host-etc-sysctl.d/inotify.conf << EOF
          fs.inotify.max_user_watches = 4194304
          fs.inotify.max_user_instances = 65536
          EOF
          # proxy_arp can be required in some CNI setups
          tee /host-etc-sysctl.d/apr_proxy.conf << EOF
          net.ipv4.conf.all.proxy_arp = 1
          net.ipv4.neigh.default.proxy_delay = 0
          EOF
          # reload rules from /etc/sysctl.d
          nsenter --target 1 --all sysctl --system
          ) || { 
            echo failed
            sleep infinity
          }
        securityContext:
          # required for nsenter
          privileged: true
        volumeMounts:
        - mountPath: /host-etc-sysctl.d
          name: etc-sysctl-d
      - name: crictl-install
        image: docker.io/buildpack-deps:bookworm-curl
        command:
        - sh
        - -c
        - |
          (
          set -e
          nsenter --target 1 --all crictl --version | grep "crictl version $CRICTL_VERSION" && {
            echo crictl already has matching version
            exit 0
          }
          echo downloading new crictl version
          crictl_url=https://github.com/kubernetes-sigs/cri-tools/releases/download/$CRICTL_VERSION/crictl-$CRICTL_VERSION-linux-amd64.tar.gz
          curl -LsS -o crictl-linux-amd64.tar.gz $crictl_url
          tar zxvf crictl-linux-amd64.tar.gz -C /host-usr-local/bin
          nsenter --target 1 --all crictl --version
          nsenter --target 1 --all crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock --set image-endpoint=unix:///run/containerd/containerd.sock
          
          nsenter --target 1 --all addgroup --gid 201 containerd
          nsenter --target 1 --all chgrp containerd /run/containerd/containerd.sock
          ) || { 
            echo failed
            sleep infinity
          }
        env:
        - name: CRICTL_VERSION
          # Check new versions here:
          # https://github.com/kubernetes-sigs/cri-tools/releases
          value: v1.33.0
        securityContext:
          # required for nsenter
          privileged: true
        volumeMounts:
        - mountPath: /host-usr-local
          name: usr-local
      containers:
      - name: sleep
        image: docker.io/alpine:3.17.3
        command: ["/bin/sh", "-c", "trap : TERM INT; sleep infinity & wait"]
      volumes:
      - name: etc-sysctl-d
        hostPath: 
          path: /etc/sysctl.d
          type: Directory
      - name: usr-local
        hostPath: 
          path: /usr/local
          type: Directory
