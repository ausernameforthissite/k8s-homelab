
nameOverride: ~
fullnameOverride: ~
namespaceOverride: ~

crds:
  install: false

config:
  create: true
  # -- (string) The configmap name (required if `create` is `false`).
  name: ~
  # -- Enable registry mutation for container images. Enabled by default.
  enableDefaultRegistryMutation: true
  # -- The registry hostname used for the image mutation.
  defaultRegistry: docker.io
  excludeGroups:
    - system:nodes
  # -- Defines the `namespaceSelector` in the webhook configurations.
  # Note that it takes a list of `namespaceSelector` and/or `objectSelector` in the JSON format, and only the first element
  # will be forwarded to the webhook configurations.
  # The Kyverno namespace is excluded if `excludeKyvernoNamespace` is `true` (default)
  excludeKyvernoNamespace: true
  webhooks:
    namespaceSelector:
      matchExpressions:
      - key: kubernetes.io/metadata.name
        operator: NotIn
        values:
        - kube-system
        - kyverno
        - cilium
        - calico-system
        - calico-apiserver
      - key: kubernetes.io/namespace-type
        operator: NotIn
        values:
        - system-critical
    # Exclude objects
    # - objectSelector:
    #     matchExpressions:
    #     - key: webhooks.kyverno.io/exclude
    #       operator: DoesNotExist

  # -- Defines match conditions to set on webhook configurations (requires Kubernetes 1.27+).
  matchConditions: []

metricsConfig:
  # -- Create the configmap.
  create: true

webhooksCleanup:
  # -- Create a helm pre-delete hook to cleanup webhooks.
  enabled: false

policyReportsCleanup:
  # -- Create a helm post-upgrade hook to cleanup the old policy reports.
  enabled: false

grafana:
  # -- Enable grafana dashboard creation.
  enabled: false

  # -- Configmap name template.
  configMapName: '{{ include "kyverno.fullname" . }}-grafana'

  # -- (string) Namespace to create the grafana dashboard configmap.
  # If not set, it will be created in the same namespace where the chart is deployed.
  namespace: ~

  # -- Grafana dashboard configmap annotations.
  annotations: {}

  # -- Grafana dashboard configmap labels
  labels:
    grafana_dashboard: "1"

  # -- create GrafanaDashboard custom resource referencing to the configMap.
  # according to https://grafana-operator.github.io/grafana-operator/docs/examples/dashboard_from_configmap/readme/
  grafanaDashboard:
    create: false
    matchLabels:
      dashboards: "grafana"

features:
  admissionReports:
    enabled: true
  aggregateReports:
    enabled: true
  policyReports:
    enabled: true
  validatingAdmissionPolicyReports:
    enabled: false
  autoUpdateWebhooks:
    enabled: true
  backgroundScan:
    enabled: true
    backgroundScanWorkers: 2
    backgroundScanInterval: 1h
    skipResourceFilters: true
  configMapCaching:
    enabled: true
  deferredLoading:
    enabled: true
  dumpPayload:
    enabled: false
  forceFailurePolicyIgnore:
    enabled: false
  generateValidatingAdmissionPolicy:
    enabled: true
  logging:
    format: json
    verbosity: 2
  omitEvents:
    # -- Events which should not be emitted (possible values `PolicyViolation`, `PolicyApplied`, `PolicyError`, and `PolicySkipped`)
    eventTypes:
    - PolicyViolation
    - PolicyApplied
    - PolicyError
    - PolicySkipped
  policyExceptions:
    enabled: true
    # -- Restrict policy exceptions to a single namespace
    namespace: ''
  protectManagedResources:
    enabled: false

cleanupJobs:
  admissionReports:
    enabled: true
  clusterAdmissionReports:
    enabled: true

admissionController:
  # -- Create self-signed certificates at deployment time.
  # The certificates won't be automatically renewed if this is set to `true`.
  createSelfSignedCert: false
  replicas: ~
  nodeSelector: {}
  tolerations: []
  antiAffinity:
    enabled: true
  container:
    resources:
      limits:
        memory: 384Mi
      requests:
        cpu: 100m
        memory: 128Mi

  service:
    port: 443
    type: ClusterIP
    annotations: {}

  metricsService:
    create: true
    port: 8000
    type: ClusterIP
    annotations: {}

backgroundController:
  enabled: false

cleanupController:
  enabled: false

reportsController:
  enabled: false

# Tests configuration
test:
  image:
    registry: ~
    repository: busybox
    tag: '1.34'
    pullPolicy: ~
