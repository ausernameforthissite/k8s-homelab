---
# yaml-language-server: $schema=https://www.authelia.com/schemas/v4.39/json-schema/configuration.json

# light, dark, grey, auto.
theme: grey

## Set the default 2FA method for new users and for when a user has a preferred method configured that has been
## disabled. This setting must be a method that is enabled.
## Options are totp, webauthn, mobile_push.
default_2fa_method: totp

server:
  address: tcp://:9091/
  disable_healthcheck: true

log:
  # info, debug, trace
  level: debug
  format: json

telemetry:
  metrics:
    enabled: true
    address: tcp://:9959/metrics

totp:
  disable: false
  issuer: '{{ env "AUTHELIA_NAME" }}'
  algorithm: SHA1
  digits: 6
  period: 30
  skew: 1
  secret_size: 32
  disable_reuse_security_policy: true

webauthn:
  disable: false
  enable_passkey_login: true
  display_name: Authelia
  timeout: 60s

duo_api:
  disable: true

identity_validation:
  reset_password:
    jwt_lifespan: 30m
    jwt_algorithm: HS256

  elevated_session:
    code_lifespan: 5m
    elevation_lifespan: 24h
    characters: 8
    # require_second_factor: false
    ## Skips the elevation requirement and entry of the One-Time Code if the user has performed second factor authentication.
    # skip_second_factor: false

ntp:
  disable_startup_check: true

authentication_backend:
  password_change:
    disable: false
  password_reset:
    disable: false
  refresh_interval: 1m

  ldap:
    address: ldap://lldap.auth-lldap.svc.cluster.local:3890
    implementation: lldap
    base_dn: dc=example,dc=com
    user: '{{ env "LDAP_USER" }}'
    password: '{{ env "LDAP_PASSWORD" }}'

password_policy:
  standard:
    enabled: false
  zxcvbn:
    enabled: false

access_control:
  # bypass, one_factor, two_factor
  default_policy: two_factor

session:
  cookies:
  - name: authelia_session
    domain: '{{ env "AUTHELIA_DOMAIN" }}'
    authelia_url: https://{{ env "AUTHELIA_DOMAIN" }}

  inactivity: 24h
  expiration: 24h
  remember_me: 360d

  redis:
    host: df-authelia
    port: 6379
    # username: authelia
    password: '{{ env "REDIS_PASSWORD" }}'

# brute force protection
regulation:
  modes:
  - user
  max_retries: 10
  find_time: 2m
  ban_time: 5m

storage:
  postgres:
    address: tcp://pg-authelia-rw:5432
    database: app
    # schema: public
    username: app
    password: '{{ env "POSTGRES_PASSWORD" }}'

identity_providers:
  oidc:
    lifespans:
      access_token: 24h
      id_token: 24h
      refresh_token: 360d
      authorize_code: 5m
      device_code: 5m

    cors:
      allowed_origins_from_client_redirect_uris: true
