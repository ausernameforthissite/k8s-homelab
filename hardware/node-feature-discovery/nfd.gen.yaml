---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfd
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfd-worker
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nfd-master-conf
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
data:
  nfd-master.conf: |-
    extraLabelNs:
    - nvidia.com
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nfd-topology-updater-conf
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
data:
  nfd-topology-updater.conf: |-
    null
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nfd-worker-conf
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
data:
  nfd-worker.conf: |-
    sources:
      pci:
        deviceClassWhitelist:
        - "0200"
        - "03"
        - "12"
        - 0b40
        - "0207"
        - "0300"
        - "0302"
        deviceLabelFields:
        - vendor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - get
  - patch
  - update
  - list
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeatures
  - nodefeaturerules
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - "nfd-master.nfd.kubernetes.io"
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfd
subjects:
- kind: ServiceAccount
  name: nfd
  namespace: hw-nfd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nfd-worker
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
rules:
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeatures
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nfd-worker
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nfd-worker
subjects:
- kind: ServiceAccount
  name: nfd-worker
  namespace: hw-nfd
---
apiVersion: v1
kind: Service
metadata:
  name: nfd-master
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
    role: master
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
    role: master
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name:  nfd-worker
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
    role: worker
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nfd
      app.kubernetes.io/instance: nfd
      role: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nfd
        app.kubernetes.io/instance: nfd
        role: worker
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: nfd-worker
      securityContext:
        {}
      containers:
      - name: worker
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        image: "registry.k8s.io/nfd/node-feature-discovery:v0.14.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
            {}
        command:
        - "nfd-worker"
        args:
        - "-server=nfd-master:8080"
        - "-enable-nodefeature-api=false"
        - "-metrics=8081"
        ports:
          - name: metrics
            containerPort: 8081
        volumeMounts:
        - name: host-boot
          mountPath: "/host-boot"
          readOnly: true
        - name: host-os-release
          mountPath: "/host-etc/os-release"
          readOnly: true
        - name: host-sys
          mountPath: "/host-sys"
          readOnly: true
        - name: host-usr-lib
          mountPath: "/host-usr/lib"
          readOnly: true
        - name: host-lib
          mountPath: "/host-lib"
          readOnly: true
        - name: source-d
          mountPath: "/etc/kubernetes/node-feature-discovery/source.d/"
          readOnly: true
        - name: features-d
          mountPath: "/etc/kubernetes/node-feature-discovery/features.d/"
          readOnly: true
        - name: nfd-worker-conf
          mountPath: "/etc/kubernetes/node-feature-discovery"
          readOnly: true
      volumes:
        - name: host-boot
          hostPath:
            path: "/boot"
        - name: host-os-release
          hostPath:
            path: "/etc/os-release"
        - name: host-sys
          hostPath:
            path: "/sys"
        - name: host-usr-lib
          hostPath:
            path: "/usr/lib"
        - name: host-lib
          hostPath:
            path: "/lib"
        - name: source-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/source.d/"
        - name: features-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/features.d/"
        - name: nfd-worker-conf
          configMap:
            name: nfd-worker-conf
            items:
              - key: nfd-worker.conf
                path: nfd-worker.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  nfd-master
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nfd
      app.kubernetes.io/instance: nfd
      role: master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nfd
        app.kubernetes.io/instance: nfd
        role: master
    spec:
      serviceAccountName: nfd
      enableServiceLinks: false
      securityContext:
        {}
      containers:
        - name: master
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          image: "registry.k8s.io/nfd/node-feature-discovery:v0.14.1"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - "/usr/bin/grpc_health_probe"
              - "-addr=:8080"
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - "/usr/bin/grpc_health_probe"
              - "-addr=:8080"
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 10
          ports:
          - containerPort: 8080
            name: grpc
          - containerPort: 8081
            name: metrics
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          command:
            - "nfd-master"
          resources:
            {}
          args:
            - "-port=8080"
            - "-enable-nodefeature-api=false"
            ## By default, disable crd controller for other than the default instances
            - "-crd-controller=true"
            - "-metrics=8081"
          volumeMounts:
            - name: nfd-master-conf
              mountPath: "/etc/kubernetes/node-feature-discovery"
              readOnly: true
      volumes:
        - name: nfd-master-conf
          configMap:
            name: nfd-master-conf
            items:
              - key: nfd-master.conf
                path: nfd-master.conf
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 1
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - ""
            weight: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
          value: ""
