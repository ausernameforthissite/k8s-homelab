apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfd
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfd-gc
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfd-worker
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nfd-master-conf
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
data:
  nfd-master.conf: |-
    extraLabelNs:
    - nvidia.com
    klog: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nfd-worker-conf
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
data:
  nfd-worker.conf: |-
    core:
      featureSources:
      - all
      - -storage
      - -system
      klog: {}
      labelSources:
      - all
      - -storage
      - -system
    sources:
      cpu:
        cpuid:
          attributeBlacklist:
          - BMI1
          - BMI2
          - CLMUL
          - CMOV
          - CX16
          - ERMS
          - F16C
          - FMA3
          - HTT
          - LZCNT
          - MMX
          - MMXEXT
          - NX
          - POPCNT
          - RDRAND
          - RDSEED
          - RDTSCP
          - SSE
          - SSE2
          - SSE3
          - SSE4
          - SSE42
          - SSSE3
          - ADX
          - AVX
          - CMPXCHG8
          - CLZERO
          - FSRM
          - FXSR
          - FXSROPT
          - GFNI
          - IA32_ARCH_CAP
          - IBPB
          - IBRS
          - LAHF
          - LBRVIRT
          - NRIPS
          - MD_CLEAR
          - MOVBE
          - MOVDIR64B
          - MOVDIRI
          - OSXSAVE
          - SERIALIZE
          - SPEC_CTRL_SSBD
          - STIBP
          - STOSB_SHORT
          - SYSCALL
          - SYSEE
          - SSE4A
          - SVMNP
          - SVMPF
          - SVMPFT
          - TSCRATEMSR
          - VPCLMULQDQ
          - VMCBCLEAN
          - WAITPKG
          - WBNOINVD
          - X87
          - XGETBV1
          - XSAVE
          - XSAVEC
          - XSAVEOPT
          - XSAVES
          attributeWhitelist: []
      custom: []
      kernel:
        configOpts:
        - ""
      pci:
        deviceClassWhitelist:
        - "0200"
        - "03"
        - "12"
        - 0b40
        - "0207"
        deviceLabelFields:
        - vendor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - get
  - patch
  - update
  - list
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeatures
  - nodefeaturerules
  - nodefeaturegroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeaturegroups/status
  verbs:
  - patch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - "nfd-master.nfd.kubernetes.io"
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfd-gc
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  verbs:
  - get
- apiGroups:
  - topology.node.k8s.io
  resources:
  - noderesourcetopologies
  verbs:
  - delete
  - list
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeatures
  verbs:
  - delete
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfd
subjects:
- kind: ServiceAccount
  name: nfd
  namespace: hw-nfd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfd-gc
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfd-gc
subjects:
- kind: ServiceAccount
  name: nfd-gc
  namespace: hw-nfd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nfd-worker
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
rules:
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeatures
  verbs:
  - create
  - get
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nfd-worker
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nfd-worker
subjects:
- kind: ServiceAccount
  name: nfd-worker
  namespace: hw-nfd
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nfd-worker
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
    role: worker
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: nfd
      app.kubernetes.io/instance: nfd
      role: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nfd
        app.kubernetes.io/instance: nfd
        role: worker
      annotations:
        checksum/config: d612376345334e4ea9ce5e68dd3341f6b8ec73be7272d37818e382b11399f498
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: nfd-worker
      securityContext: {}
      hostNetwork: false
      containers:
      - name: worker
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        image: "registry.k8s.io/nfd/node-feature-discovery:v0.17.3"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 8082
          initialDelaySeconds: 10
        readinessProbe:
          grpc:
            port: 8082
          initialDelaySeconds: 5
          failureThreshold: 10
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        resources:
          limits:
            memory: 64Mi
          requests:
            cpu: 5m
            memory: 64Mi
        command:
        - "nfd-worker"
        args:
        # Go over featureGate and add the feature-gate flag
        - "-feature-gates=NodeFeatureGroupAPI=false"
        - "-metrics=8081"
        - "-grpc-health=8082"
        ports:
        - containerPort: 8081
          name: metrics
        - containerPort: 8082
          name: health
        volumeMounts:
        - name: host-boot
          mountPath: "/host-boot"
          readOnly: true
        - name: host-os-release
          mountPath: "/host-etc/os-release"
          readOnly: true
        - name: host-sys
          mountPath: "/host-sys"
          readOnly: true
        - name: host-usr-lib
          mountPath: "/host-usr/lib"
          readOnly: true
        - name: host-lib
          mountPath: "/host-lib"
          readOnly: true
        - name: host-proc-swaps
          mountPath: "/host-proc/swaps"
          readOnly: true
        - name: features-d
          mountPath: "/etc/kubernetes/node-feature-discovery/features.d/"
          readOnly: true
        - name: nfd-worker-conf
          mountPath: "/etc/kubernetes/node-feature-discovery"
          readOnly: true
      volumes:
      - name: host-boot
        hostPath:
          path: "/boot"
      - name: host-os-release
        hostPath:
          path: "/etc/os-release"
      - name: host-sys
        hostPath:
          path: "/sys"
      - name: host-usr-lib
        hostPath:
          path: "/usr/lib"
      - name: host-lib
        hostPath:
          path: "/lib"
      - name: host-proc-swaps
        hostPath:
          path: "/proc/swaps"
      - name: features-d
        hostPath:
          path: "/etc/kubernetes/node-feature-discovery/features.d/"
      - name: nfd-worker-conf
        configMap:
          name: nfd-worker-conf
          items:
          - key: nfd-worker.conf
            path: nfd-worker.conf
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfd-master
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
    role: master
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: nfd
      app.kubernetes.io/instance: nfd
      role: master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nfd
        app.kubernetes.io/instance: nfd
        role: master
      annotations:
        checksum/config: 991a9176b0b36deded323e57b71053596cb1f46bb50cc9f1f1afa37dbc4db2a4
    spec:
      serviceAccountName: nfd
      enableServiceLinks: false
      securityContext: {}
      hostNetwork: false
      containers:
      - name: master
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        image: "registry.k8s.io/nfd/node-feature-discovery:v0.17.3"
        imagePullPolicy: IfNotPresent
        startupProbe:
          grpc:
            port: 8082
          failureThreshold: 30
        livenessProbe:
          grpc:
            port: 8082
        readinessProbe:
          grpc:
            port: 8082
          failureThreshold: 10
        ports:
        - containerPort: 8081
          name: metrics
        - containerPort: 8082
          name: health
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
        - "nfd-master"
        resources:
          limits:
            memory: 70Mi
          requests:
            cpu: 1m
            memory: 50Mi
        args:
        - "-enable-leader-election"
        # Go over featureGates and add the feature-gate flag
        - "-feature-gates=NodeFeatureGroupAPI=false"
        - "-metrics=8081"
        - "-grpc-health=8082"
        volumeMounts:
        - name: nfd-master-conf
          mountPath: "/etc/kubernetes/node-feature-discovery"
          readOnly: true
      volumes:
      - name: nfd-master-conf
        configMap:
          name: nfd-master-conf
          items:
          - key: nfd-master.conf
            path: nfd-master.conf
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - ""
            weight: 1
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
        value: ""
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
        value: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfd-gc
  namespace: hw-nfd
  labels:
    app.kubernetes.io/name: nfd
    app.kubernetes.io/instance: nfd
    role: gc
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: nfd
      app.kubernetes.io/instance: nfd
      role: gc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nfd
        app.kubernetes.io/instance: nfd
        role: gc
    spec:
      serviceAccountName: nfd-gc
      dnsPolicy: ClusterFirstWithHostNet
      securityContext: {}
      hostNetwork: false
      containers:
      - name: gc
        image: "registry.k8s.io/nfd/node-feature-discovery:v0.17.3"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
        - "nfd-gc"
        args:
        - "-gc-interval=1h"
        resources:
          limits:
            memory: 40Mi
          requests:
            cpu: 1m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        ports:
        - name: metrics
          containerPort: 8081
