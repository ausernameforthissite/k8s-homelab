---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unifi
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: unifi
  template:
    metadata:
      labels:
        app: unifi
    spec:
      securityContext:
        # folders in the image are owned by user 102:103
        runAsUser: 102
        runAsGroup: 103
        fsGroup: 102
        fsGroupChangePolicy: Always
      containers:
      - name: unifi
        image: docker.io/linuxserver/unifi-controller:7.4.162
        command:
        - /entrypoint.sh
        ports:
        - name: web-https
          containerPort: 8443
        - containerPort: 3478
          protocol: UDP
        - containerPort: 10001
          protocol: UDP
        - containerPort: 8080
        # - containerPort: 1900 #optional
        #   protocol: UDP
        # - containerPort: 8843 #optional
        # - containerPort: 8880 #optional
        # - containerPort: 6789 #optional
        # - containerPort: 5514 #optional
        #   protocol: UDP
        env:
        - name: MEM_STARTUP
          value: '32'
        - name: MEM_LIMIT
          value: '128'
        resources:
          requests:
            memory: 500Mi
          limits:
            memory: 700Mi
        volumeMounts:
        - mountPath: /entrypoint.sh
          name: entrypoint
          subPath: entrypoint.sh
        - mountPath: /usr/lib/unifi/data
          name: config
          subPath: data
        - mountPath: /usr/lib/unifi/logs
          name: config
          subPath: logs
        # - mountPath: /usr/lib/unifi/run
        #   name: config
        # - mountPath: /run
        #   name: run
        startupProbe:
          httpGet:
            path: /
            port: web-https
            scheme: HTTPS
          periodSeconds: 1
          timeoutSeconds: 1
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /
            port: web-https
            scheme: HTTPS
          periodSeconds: 1
          timeoutSeconds: 1
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /
            port: web-https
            scheme: HTTPS
          periodSeconds: 1
          timeoutSeconds: 1
          failureThreshold: 1
      - name: nginx
        # Stupid unifi controller can't listen on HTTP port, and for HTTPS it always uses self-signed certificate.
        # Stupid unifi controller can't use certificate from a file, it needs a special procedure to load certificate info some Java key storage,
        # and I just couldn't bother to do it. Adding nginx proxy that simply strips TLS in front of it is just much easier.
        image: docker.io/peytonyip/nginx-brotli:1.27.4
        ports:
        - name: http
          containerPort: 8081
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/nginx/
          name: nginx-conf
        - mountPath: /tmp
          name: nginx-tmp
        resources:
          requests:
            memory: 10Mi
          limits:
            memory: 100Mi
        livenessProbe:
          failureThreshold: 5
          periodSeconds: 1
          httpGet:
            path: /health
            port: http
        readinessProbe:
          failureThreshold: 1
          periodSeconds: 1
          httpGet:
            path: /health
            port: http
      volumes:
      - name: entrypoint
        configMap:
          name: entrypoint
          defaultMode: 0555
      - name: config
        persistentVolumeClaim:
          claimName: config
      - name: nginx-conf
        configMap:
          name: nginx-conf
      - name: nginx-tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  selector:
    app: unifi
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: web-https
